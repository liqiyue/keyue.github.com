<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笔记本</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liqiyue.github.io/"/>
  <updated>2020-11-15T13:38:23.860Z</updated>
  <id>http://liqiyue.github.io/</id>
  
  <author>
    <name>绵绵密码</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>post</title>
    <link href="http://liqiyue.github.io/2020/11/15/post-4.html"/>
    <id>http://liqiyue.github.io/2020/11/15/post-4.html</id>
    <published>2020-11-15T13:38:23.000Z</published>
    <updated>2020-11-15T13:38:23.860Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="http://liqiyue.github.io/2020/11/15/post-3.html"/>
    <id>http://liqiyue.github.io/2020/11/15/post-3.html</id>
    <published>2020-11-15T13:38:22.000Z</published>
    <updated>2020-11-15T13:38:22.336Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="http://liqiyue.github.io/2020/11/15/post-2.html"/>
    <id>http://liqiyue.github.io/2020/11/15/post-2.html</id>
    <published>2020-11-15T13:38:20.000Z</published>
    <updated>2020-11-15T13:38:20.944Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python学习笔记6-列表</title>
    <link href="http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-%E5%88%97%E8%A1%A8.html"/>
    <id>http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-%E5%88%97%E8%A1%A8.html</id>
    <published>2020-11-15T13:38:19.000Z</published>
    <updated>2020-11-16T13:51:48.590Z</updated>
    
    <summary type="html">
    
      Python学习笔记6-列表
    
    </summary>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://liqiyue.github.io/2020/11/15/test.html"/>
    <id>http://liqiyue.github.io/2020/11/15/test.html</id>
    <published>2020-11-15T13:38:19.000Z</published>
    <updated>2020-11-16T18:08:49.113Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python学习笔记5-字符串</title>
    <link href="http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-%E5%AD%97%E7%AC%A6%E4%B8%B2.html"/>
    <id>http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-%E5%AD%97%E7%AC%A6%E4%B8%B2.html</id>
    <published>2020-11-15T13:38:17.000Z</published>
    <updated>2020-11-16T13:48:10.839Z</updated>
    
    <content type="html"><![CDATA[<p>字符串是 Python 中最常用的数据类型。我们可以使用引号( <strong>‘</strong> 或 <strong>“</strong> )来创建字符串。</p><p>创建字符串很简单，只要为变量分配一个值即可。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var1 = <span class="string">'Hello World!'</span> </span><br><span class="line">var2 = <span class="string">"你好，世界"</span></span><br><span class="line">var3 = <span class="string">'''hello，世界'''</span></span><br><span class="line">var4 = <span class="string">"""你好，world!"""</span></span><br></pre></td></tr></table></figure><h2 id="访问字符串中的值（下标）"><a href="#访问字符串中的值（下标）" class="headerlink" title="访问字符串中的值（下标）"></a>访问字符串中的值（下标）</h2><p>Python 不支持单字符类型，单字符在 Python 中也是作为一个字符串使用。</p><p>Python 访问子字符串，可以使用方括号 <strong>[]</strong> 来截取字符串，字符串的截取的语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量[头下标:尾下标]</span><br></pre></td></tr></table></figure><p>索引值以 <strong>0</strong> 为开始值，<strong>-1</strong> 为从末尾的开始位置。</p><p><img src="../../../../images/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-%E5%AD%97%E7%AC%A6%E4%B8%B2/123456-20200923-1.svg" alt="img"></p><p>如下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3  </span></span><br><span class="line">var1 = <span class="string">'Hello World!'</span> </span><br><span class="line">var2 = <span class="string">"Runoob"</span>  </span><br><span class="line"><span class="keyword">print</span> (<span class="string">"var1[0]: "</span>, var1[<span class="number">0</span>]) </span><br><span class="line"><span class="keyword">print</span> (<span class="string">"var2[1:5]: "</span>, var2[<span class="number">1</span>:<span class="number">5</span>])</span><br></pre></td></tr></table></figure><p>以上实例执行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var1[<span class="number">0</span>]:  H</span><br><span class="line">var2[<span class="number">1</span>:<span class="number">5</span>]:  unoo</span><br></pre></td></tr></table></figure><hr><h2 id="字符串更新-切片"><a href="#字符串更新-切片" class="headerlink" title="字符串更新(切片)"></a>字符串更新(切片)</h2><blockquote><p>语法：[start:end:step]<br>包含start,不包含end<br>step指的是步长，理解为间隔(默认为1,不能为0可以为负数)<br>如果只设置start，会截取到最后<br>如果只设置end，会从头开始截取<br>不包含start,不包含end,表示从头到尾复制<br>start和end如果为负数，会从右往左数</p></blockquote><p>你可以截取字符串的一部分并与其他字段拼接，如下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3  </span></span><br><span class="line">var1 = <span class="string">'Hello World!'</span>  </span><br><span class="line"><span class="keyword">print</span> (<span class="string">"已更新字符串 : "</span>, var1[:<span class="number">6</span>] + <span class="string">'Runoob!'</span>)</span><br></pre></td></tr></table></figure><p>以上实例执行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">已更新字符串 :  Hello Runoob!</span><br></pre></td></tr></table></figure><hr><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>在需要在字符中使用特殊字符时，python 用反斜杠 <strong>\</strong> 转义字符。如下表：</p><table><thead><tr><th align="left">转义字符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">(在行尾时)</td><td align="left">续行符</td><td align="left">&gt;&gt;&gt; print(“line1 \ <br />… line2 \ <br />… line3”) <br />line1 line2 line3 <br />&gt;&gt;&gt;</td></tr><tr><td align="left">\</td><td align="left">反斜杠符号</td><td align="left">&gt;&gt;&gt; print(“\“)<br /> \</td></tr><tr><td align="left">&#39;</td><td align="left">单引号</td><td align="left">&gt;&gt;&gt; print(‘&#39;‘) <br />‘</td></tr><tr><td align="left">&quot;</td><td align="left">双引号</td><td align="left">&gt;&gt;&gt; print(“&quot;“)<br /> “</td></tr><tr><td align="left">\a</td><td align="left">响铃</td><td align="left">&gt;&gt;&gt; print(“\a”)<br />执行后电脑有响声。</td></tr><tr><td align="left">\b</td><td align="left">退格(Backspace)</td><td align="left">&gt;&gt;&gt; print(“Hello \b World!”) <br />Hello World!</td></tr><tr><td align="left">\000</td><td align="left">空</td><td align="left">&gt;&gt;&gt; print(“\000”)<br /> &gt;&gt;&gt;</td></tr><tr><td align="left">\n</td><td align="left">换行</td><td align="left">&gt;&gt;&gt; print(“\n”)  <br />&gt;&gt;&gt;</td></tr><tr><td align="left">\v</td><td align="left">纵向制表符</td><td align="left">&gt;&gt;&gt; print(“Hello \v World!”) <br />Hello<br />        World! &gt;&gt;&gt;</td></tr><tr><td align="left">\t</td><td align="left">横向制表符</td><td align="left">&gt;&gt;&gt; print(“Hello \t World!”) <br />Hello    World! <br />&gt;&gt;&gt;</td></tr><tr><td align="left">\r</td><td align="left">回车</td><td align="left">&gt;&gt;&gt; print(“Hello\rWorld!”) <br />World!</td></tr><tr><td align="left">\f</td><td align="left">换页</td><td align="left">&gt;&gt;&gt; print(“Hello \f World!”) <br />Hello<br />        World!<br /> &gt;&gt;&gt;</td></tr><tr><td align="left">\yyy</td><td align="left">八进制数，y 代表 0~7 的字符，例如：\012 代表换行。</td><td align="left">&gt;&gt;&gt; print(“\110\145\154\154\157\40\127\157\162\154\144\41”)<br /> Hello World!</td></tr><tr><td align="left">\xyy</td><td align="left">十六进制数，以 \x 开头，y 代表的字符，例如：\x0a 代表换行</td><td align="left">&gt;&gt;&gt; print(“\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21”)<br /> Hello World!</td></tr><tr><td align="left">\other</td><td align="left">其它的字符以普通格式输出</td><td align="left"></td></tr></tbody></table><hr><h2 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h2><p>下表实例变量 a 值为字符串 “Hello”，b 变量值为 “Python”：</p><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">字符串连接</td><td align="left">a + b 输出结果： HelloPython</td></tr><tr><td align="left">*</td><td align="left">重复输出字符串</td><td align="left">a*2 输出结果：HelloHello</td></tr><tr><td align="left">[]</td><td align="left">通过索引获取字符串中字符</td><td align="left">a[1] 输出结果 <strong>e</strong></td></tr><tr><td align="left">[ : ]</td><td align="left">截取字符串中的一部分，遵循<strong>左闭右开</strong>原则，str[0:2] 是不包含第 3 个字符的。</td><td align="left">a[1:4] 输出结果 <strong>ell</strong></td></tr><tr><td align="left">in</td><td align="left">成员运算符 - 如果字符串中包含给定的字符返回 True</td><td align="left"><strong>‘H’ in a</strong> 输出结果 True</td></tr><tr><td align="left">not in</td><td align="left">成员运算符 - 如果字符串中不包含给定的字符返回 True</td><td align="left"><strong>‘M’ not in a</strong> 输出结果 True</td></tr><tr><td align="left">r/R</td><td align="left">原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母 <strong>r</strong>（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</td><td align="left"><code>print( r&#39;\n&#39; ) print( R&#39;\n&#39; )</code></td></tr><tr><td align="left">%</td><td align="left">格式字符串</td><td align="left"></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3  </span></span><br><span class="line">a = <span class="string">"Hello"</span> </span><br><span class="line">b = <span class="string">"Python"</span>  </span><br><span class="line">print(<span class="string">"a + b 输出结果："</span>, a + b) </span><br><span class="line">print(<span class="string">"a * 2 输出结果："</span>, a * <span class="number">2</span>) </span><br><span class="line">print(<span class="string">"a[1] 输出结果："</span>, a[<span class="number">1</span>]) </span><br><span class="line">print(<span class="string">"a[1:4] 输出结果："</span>, a[<span class="number">1</span>:<span class="number">4</span>])  </span><br><span class="line"><span class="keyword">if</span>( <span class="string">"H"</span> <span class="keyword">in</span> a) :    </span><br><span class="line">print(<span class="string">"H 在变量 a 中"</span>) </span><br><span class="line"><span class="keyword">else</span> :    </span><br><span class="line">print(<span class="string">"H 不在变量 a 中"</span>)  </span><br><span class="line"><span class="keyword">if</span>( <span class="string">"M"</span> <span class="keyword">not</span> <span class="keyword">in</span> a) :    </span><br><span class="line">  print(<span class="string">"M 不在变量 a 中"</span>) </span><br><span class="line"><span class="keyword">else</span> :    </span><br><span class="line">  print(<span class="string">"M 在变量 a 中"</span>)  </span><br><span class="line"><span class="keyword">print</span> (<span class="string">r'\n'</span>) </span><br><span class="line"><span class="keyword">print</span> (R<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a + b 输出结果： HelloPython</span><br><span class="line">a * <span class="number">2</span> 输出结果： HelloHello</span><br><span class="line">a[<span class="number">1</span>] 输出结果： e</span><br><span class="line">a[<span class="number">1</span>:<span class="number">4</span>] 输出结果： ell</span><br><span class="line">H 在变量 a 中</span><br><span class="line">M 不在变量 a 中</span><br><span class="line">\n</span><br><span class="line">\n</span><br></pre></td></tr></table></figure><hr><h2 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h2><p>Python 支持格式化字符串的输出 。尽管这样可能会用到非常复杂的表达式，但最基本的用法是将一个值插入到一个有字符串格式符 %s 的字符串中。</p><p>在 Python 中，字符串格式化使用与 C 中 sprintf 函数一样的语法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3  </span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">"我叫 %s 今年 %d 岁!"</span> % (<span class="string">'小明'</span>, <span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我叫 小明 今年 <span class="number">10</span> 岁!</span><br></pre></td></tr></table></figure><p>python字符串格式化符号:</p><table><thead><tr><th align="left">符  号</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">%c</td><td align="left">格式化字符及其ASCII码</td></tr><tr><td align="left">%s</td><td align="left">格式化字符串</td></tr><tr><td align="left">%d</td><td align="left">格式化整数</td></tr><tr><td align="left">%u</td><td align="left">格式化无符号整型</td></tr><tr><td align="left">%o</td><td align="left">格式化无符号八进制数</td></tr><tr><td align="left">%x</td><td align="left">格式化无符号十六进制数</td></tr><tr><td align="left">%X</td><td align="left">格式化无符号十六进制数（大写）</td></tr><tr><td align="left">%f</td><td align="left">格式化浮点数字，可指定小数点后的精度</td></tr><tr><td align="left">%e</td><td align="left">用科学计数法格式化浮点数</td></tr><tr><td align="left">%E</td><td align="left">作用同%e，用科学计数法格式化浮点数</td></tr><tr><td align="left">%g</td><td align="left">%f和%e的简写</td></tr><tr><td align="left">%G</td><td align="left">%f 和 %E 的简写</td></tr><tr><td align="left">%p</td><td align="left">用十六进制数格式化变量的地址</td></tr></tbody></table><p>格式化操作符辅助指令:</p><table><thead><tr><th align="left">符号</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">定义宽度或者小数点精度</td></tr><tr><td align="left">-</td><td align="left">用做左对齐</td></tr><tr><td align="left">+</td><td align="left">在正数前面显示加号( + )</td></tr><tr><td align="left">&lt;<sp>sp&gt;</td><td align="left">在正数前面显示空格</td></tr><tr><td align="left">#</td><td align="left">在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td></tr><tr><td align="left">0</td><td align="left">显示的数字前面填充’0’而不是默认的空格</td></tr><tr><td align="left">%</td><td align="left">‘%%’输出一个单一的’%’</td></tr><tr><td align="left">(var)</td><td align="left">映射变量(字典参数)</td></tr><tr><td align="left">m.n.</td><td align="left">m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)</td></tr></tbody></table><p>Python2.6 开始，新增了一种格式化字符串的函数 <a href="https://www.runoob.com/python/att-string-format.html" target="_blank" rel="noopener">str.format()</a>，它增强了字符串格式化的功能。</p><h2 id="format-格式化函数"><a href="#format-格式化函数" class="headerlink" title="format 格式化函数"></a>format 格式化函数</h2><p>基本语法是通过 <strong>{}</strong> 和 <strong>:</strong> 来代替以前的 <strong>%</strong> 。</p><p>format 函数可以接受不限个参数，位置可以不按顺序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">"&#123;&#125; &#123;&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)    <span class="comment"># 不设置指定位置，按默认顺序</span></span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"&#123;0&#125; &#123;1&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"&#123;1&#125; &#123;0&#125; &#123;1&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">'world hello world'</span></span><br></pre></td></tr></table></figure><p>也可以设置参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line">print(<span class="string">"网站名：&#123;name&#125;, 地址 &#123;url&#125;"</span>.format(name=<span class="string">"菜鸟教程"</span>, url=<span class="string">"www.runoob.com"</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 通过字典设置参数</span></span><br><span class="line">site = &#123;<span class="string">"name"</span>: <span class="string">"菜鸟教程"</span>, <span class="string">"url"</span>: <span class="string">"www.runoob.com"</span>&#125;</span><br><span class="line">print(<span class="string">"网站名：&#123;name&#125;, 地址 &#123;url&#125;"</span>.format(**site))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 通过列表索引设置参数</span></span><br><span class="line">my_list = [<span class="string">'菜鸟教程'</span>, <span class="string">'www.runoob.com'</span>]</span><br><span class="line">print(<span class="string">"网站名：&#123;0[0]&#125;, 地址 &#123;0[1]&#125;"</span>.format(my_list))  <span class="comment"># "0" 是必须的</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">网站名：菜鸟教程, 地址 www.runoob.com</span><br><span class="line">网站名：菜鸟教程, 地址 www.runoob.com</span><br><span class="line">网站名：菜鸟教程, 地址 www.runoob.com</span><br></pre></td></tr></table></figure><p>可以向 <strong>str.format()</strong> 传入对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AssignValue</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.value = value</span><br><span class="line">my_value = AssignValue(<span class="number">6</span>)</span><br><span class="line">print(<span class="string">'value 为: &#123;0.value&#125;'</span>.format(my_value))  <span class="comment"># "0" 是可选的</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value 为: <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="数字格式化"><a href="#数字格式化" class="headerlink" title="数字格式化"></a>数字格式化</h3><p>下表展示了 str.format() 格式化数字的多种方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"&#123;:.2f&#125;"</span>.format(<span class="number">3.1415926</span>));</span><br><span class="line"><span class="number">3.14</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">数字</th><th align="left">格式</th><th align="left">输出</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">3.1415926</td><td align="left">{:.2f}</td><td align="left">3.14</td><td align="left">保留小数点后两位</td></tr><tr><td align="left">3.1415926</td><td align="left">{:+.2f}</td><td align="left">+3.14</td><td align="left">带符号保留小数点后两位</td></tr><tr><td align="left">-1</td><td align="left">{:+.2f}</td><td align="left">-1.00</td><td align="left">带符号保留小数点后两位</td></tr><tr><td align="left">2.71828</td><td align="left">{:.0f}</td><td align="left">3</td><td align="left">不带小数</td></tr><tr><td align="left">5</td><td align="left">{:0&gt;2d}</td><td align="left">05</td><td align="left">数字补零 (填充左边, 宽度为2)</td></tr><tr><td align="left">5</td><td align="left">{:x&lt;4d}</td><td align="left">5xxx</td><td align="left">数字补x (填充右边, 宽度为4)</td></tr><tr><td align="left">10</td><td align="left">{:x&lt;4d}</td><td align="left">10xx</td><td align="left">数字补x (填充右边, 宽度为4)</td></tr><tr><td align="left">1000000</td><td align="left">{:,}</td><td align="left">1,000,000</td><td align="left">以逗号分隔的数字格式</td></tr><tr><td align="left">0.25</td><td align="left">{:.2%}</td><td align="left">25.00%</td><td align="left">百分比格式</td></tr><tr><td align="left">1000000000</td><td align="left">{:.2e}</td><td align="left">1.00e+09</td><td align="left">指数记法</td></tr><tr><td align="left">13</td><td align="left">{:&gt;10d}</td><td align="left">13</td><td align="left">右对齐 (默认, 宽度为10)</td></tr><tr><td align="left">13</td><td align="left">{:&lt;10d}</td><td align="left">13</td><td align="left">左对齐 (宽度为10)</td></tr><tr><td align="left">13</td><td align="left">{:^10d}</td><td align="left">13</td><td align="left">中间对齐 (宽度为10)</td></tr><tr><td align="left">11</td><td align="left">‘{:b}’.format(11) <br />’{:d}’.format(11) <br />‘{:o}’.format(11) <br />’{:x}’.format(11) <br />‘{:#x}’.format(11)<br />‘{:#X}’.format(11)</td><td align="left">1011 <br />11 <br />13 <br />b <br />0xb <br />0XB</td><td align="left">进制</td></tr></tbody></table><p><strong>^</strong>, <strong>&lt;</strong>, <strong>&gt;</strong> 分别是居中、左对齐、右对齐，后面带宽度， <strong>:</strong> 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。</p><p><strong>+</strong> 表示在正数前显示 <strong>+</strong>，负数前显示 <strong>-</strong>； （空格）表示在正数前加空格</p><p>b、d、o、x 分别是二进制、十进制、八进制、十六进制。</p><p>此外我们可以使用大括号 <strong>{}</strong> 来转义大括号，如下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python </span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-  </span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">"&#123;&#125; 对应的位置是 &#123;&#123;0&#125;&#125;"</span>.format(<span class="string">"runoob"</span>))</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runoob 对应的位置是 &#123;<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="三引号"><a href="#三引号" class="headerlink" title="三引号"></a>三引号</h2><p>python三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊字符。实例如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3  </span></span><br><span class="line">para_str = <span class="string">"""这是一个多行字符串的实例 </span></span><br><span class="line"><span class="string">多行字符串可以使用制表符 TAB ( \t )。 </span></span><br><span class="line"><span class="string">也可以使用换行符 [ \n ]。 </span></span><br><span class="line"><span class="string">"""</span> </span><br><span class="line"><span class="keyword">print</span> (para_str)</span><br></pre></td></tr></table></figure><p>以上实例执行结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这是一个多行字符串的实例</span><br><span class="line">多行字符串可以使用制表符</span><br><span class="line">TAB (    )。</span><br><span class="line">也可以使用换行符 [ </span><br><span class="line"> ]。</span><br></pre></td></tr></table></figure><p>三引号让程序员从引号和特殊字符串的泥潭里面解脱出来，自始至终保持一小块字符串的格式是所谓的WYSIWYG（所见即所得）格式的。</p><p>一个典型的用例是，当你需要一块HTML或者SQL时，这时用字符串组合，特殊字符串转义将会非常的繁琐。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">errHTML = <span class="string">''' </span></span><br><span class="line"><span class="string">&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt; </span></span><br><span class="line"><span class="string">Friends CGI Demo&lt;/TITLE&gt;&lt;/HEAD&gt; </span></span><br><span class="line"><span class="string">&lt;BODY&gt;&lt;H3&gt;ERROR&lt;/H3&gt; </span></span><br><span class="line"><span class="string">&lt;B&gt;%s&lt;/B&gt;&lt;P&gt; </span></span><br><span class="line"><span class="string">&lt;FORM&gt;&lt;INPUT TYPE=button VALUE=Back </span></span><br><span class="line"><span class="string">ONCLICK="window.history.back()"&gt;&lt;/FORM&gt; </span></span><br><span class="line"><span class="string">&lt;/BODY&gt;&lt;/HTML&gt;</span></span><br><span class="line"><span class="string">'''</span> </span><br><span class="line">cursor.execute(<span class="string">''' </span></span><br><span class="line"><span class="string">CREATE TABLE users </span></span><br><span class="line"><span class="string">(   login VARCHAR(8),  </span></span><br><span class="line"><span class="string">uid INTEGER, </span></span><br><span class="line"><span class="string">prid INTEGER) </span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a>f-string</h2><p>f-string 是 python3.6 之后版本添加的，称之为字面量格式化字符串，是新的格式化字符串的语法。</p><p>之前我们习惯用百分号 (%):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">'Runoob'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello %s'</span> % name</span><br><span class="line"><span class="string">'Hello Runoob'</span></span><br></pre></td></tr></table></figure><p>f-string 格式化字符串以 f 开头，后面跟着字符串，字符串中的表达式用大括号 {} 包起来，它会将变量或表达式计算后的值替换进去，实例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">'Runoob'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f'Hello <span class="subst">&#123;name&#125;</span>'</span> <span class="comment"># 替换变量</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f'<span class="subst">&#123;<span class="number">1</span>+<span class="number">2</span>&#125;</span>'</span>     <span class="comment"># 使用表达式</span></span><br><span class="line"><span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>w = &#123;<span class="string">'name'</span>: <span class="string">'Runoob'</span>, <span class="string">'url'</span>: <span class="string">'www.runoob.com'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f'<span class="subst">&#123;w[<span class="string">"name"</span>]&#125;</span>: <span class="subst">&#123;w[<span class="string">"url"</span>]&#125;</span>'</span></span><br><span class="line"><span class="string">'Runoob: www.runoob.com'</span></span><br></pre></td></tr></table></figure><p>用了这种方式明显更简单了，不用再去判断使用 %s，还是 %d。</p><p>在 Python 3.8 的版本中可以使用 <strong>=</strong> 符号来拼接运算表达式与结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>**<span class="keyword">print</span>**(<span class="string">f'<span class="subst">&#123;x+<span class="number">1</span>&#125;</span>'</span>)  <span class="comment"># Python 3.6</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>**<span class="keyword">print</span>**(<span class="string">f'<span class="subst">&#123;x+<span class="number">1</span>=&#125;</span>'</span>)  <span class="comment"># Python 3.8</span></span><br><span class="line"><span class="string">'x+1=2'</span></span><br></pre></td></tr></table></figure><hr><h2 id="Unicode-字符串"><a href="#Unicode-字符串" class="headerlink" title="Unicode 字符串"></a>Unicode 字符串</h2><p>在Python2中，普通字符串是以8位ASCII码进行存储的，而Unicode字符串则存储为16位unicode字符串，这样能够表示更多的字符集。使用的语法是在字符串前面加上前缀 <strong>u</strong>。</p><p>在Python3中，所有的字符串都是Unicode字符串。</p><hr><h2 id="字符串内建函数"><a href="#字符串内建函数" class="headerlink" title="字符串内建函数"></a>字符串内建函数</h2><p>Python 的字符串常用内建函数如下：</p><table><thead><tr><th align="left">序号</th><th align="left">方法及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-capitalize.html" target="_blank" rel="noopener">capitalize()</a> 将字符串的第一个字符转换为大写</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-center.html" target="_blank" rel="noopener">center(width, fillchar)</a> 返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-count.html" target="_blank" rel="noopener">count(str, beg= 0,end=len(string))</a> 返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-decode.html" target="_blank" rel="noopener">bytes.decode(encoding=”utf-8”, errors=”strict”)</a> Python3 中没有 decode 方法，但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，这个 bytes 对象可以由 str.encode() 来编码返回。</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-encode.html" target="_blank" rel="noopener">encode(encoding=’UTF-8’,errors=’strict’)</a> 以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’</td></tr><tr><td align="left">6</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-endswith.html" target="_blank" rel="noopener">endswith(suffix, beg=0, end=len(string))</a> 检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False.</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-expandtabs.html" target="_blank" rel="noopener">expandtabs(tabsize=8)</a> 把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-find.html" target="_blank" rel="noopener">find(str, beg=0, end=len(string))</a> 检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-index.html" target="_blank" rel="noopener">index(str, beg=0, end=len(string))</a> 跟find()方法一样，只不过如果str不在字符串中会报一个异常。</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isalnum.html" target="_blank" rel="noopener">isalnum()</a> 如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isalpha.html" target="_blank" rel="noopener">isalpha()</a> 如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isdigit.html" target="_blank" rel="noopener">isdigit()</a> 如果字符串只包含数字则返回 True 否则返回 False..</td></tr><tr><td align="left">13</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-islower.html" target="_blank" rel="noopener">islower()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td></tr><tr><td align="left">14</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isnumeric.html" target="_blank" rel="noopener">isnumeric()</a> 如果字符串中只包含数字字符，则返回 True，否则返回 False</td></tr><tr><td align="left">15</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isspace.html" target="_blank" rel="noopener">isspace()</a> 如果字符串中只包含空白，则返回 True，否则返回 False.</td></tr><tr><td align="left">16</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-istitle.html" target="_blank" rel="noopener">istitle()</a> 如果字符串是标题化的(见 title())则返回 True，否则返回 False</td></tr><tr><td align="left">17</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isupper.html" target="_blank" rel="noopener">isupper()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False</td></tr><tr><td align="left">18</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-join.html" target="_blank" rel="noopener">join(seq)</a> 以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td></tr><tr><td align="left">19</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-len.html" target="_blank" rel="noopener">len(string)</a> 返回字符串长度</td></tr><tr><td align="left">20</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-ljust.html" target="_blank" rel="noopener">ljust(width[, fillchar])</a> 返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</td></tr><tr><td align="left">21</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-lower.html" target="_blank" rel="noopener">lower()</a> 转换字符串中所有大写字符为小写.</td></tr><tr><td align="left">22</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-lstrip.html" target="_blank" rel="noopener">lstrip()</a> 截掉字符串左边的空格或指定字符。</td></tr><tr><td align="left">23</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-maketrans.html" target="_blank" rel="noopener">maketrans()</a> 创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</td></tr><tr><td align="left">24</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-max.html" target="_blank" rel="noopener">max(str)</a> 返回字符串 str 中最大的字母。</td></tr><tr><td align="left">25</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-min.html" target="_blank" rel="noopener">min(str)</a> 返回字符串 str 中最小的字母。</td></tr><tr><td align="left">26</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-replace.html" target="_blank" rel="noopener">replace(old, new [, max])</a> 把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。</td></tr><tr><td align="left">27</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rfind.html" target="_blank" rel="noopener">rfind(str, beg=0,end=len(string))</a> 类似于 find()函数，不过是从右边开始查找.</td></tr><tr><td align="left">28</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rindex.html" target="_blank" rel="noopener">rindex( str, beg=0, end=len(string))</a> 类似于 index()，不过是从右边开始.</td></tr><tr><td align="left">29</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rjust.html" target="_blank" rel="noopener">rjust(width,[, fillchar])</a> 返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串</td></tr><tr><td align="left">30</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rstrip.html" target="_blank" rel="noopener">rstrip()</a> 删除字符串字符串末尾的空格.</td></tr><tr><td align="left">31</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-split.html" target="_blank" rel="noopener">split(str=””, num=string.count(str))</a> 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串,将一个字符串切割成一个列表</td></tr><tr><td align="left">32</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-splitlines.html" target="_blank" rel="noopener">splitlines([keepends])</a> 按照行(‘\r’, ‘\r\n’, \n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。</td></tr><tr><td align="left">33</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-startswith.html" target="_blank" rel="noopener">startswith(substr, beg=0,end=len(string))</a> 检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。</td></tr><tr><td align="left">34</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-strip.html" target="_blank" rel="noopener">strip([chars])</a> 在字符串上执行 lstrip()和 rstrip()</td></tr><tr><td align="left">35</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-swapcase.html" target="_blank" rel="noopener">swapcase()</a> 将字符串中大写转换为小写，小写转换为大写</td></tr><tr><td align="left">36</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-title.html" target="_blank" rel="noopener">title()</a> 返回”标题化”的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td></tr><tr><td align="left">37</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-translate.html" target="_blank" rel="noopener">translate(table, deletechars=””)</a> 根据 str 给出的表(包含 256 个字符)转换 string 的字符, 要过滤掉的字符放到 deletechars 参数中</td></tr><tr><td align="left">38</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-upper.html" target="_blank" rel="noopener">upper()</a> 转换字符串中的小写字母为大写</td></tr><tr><td align="left">39</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-zfill.html" target="_blank" rel="noopener">zfill (width)</a> 返回长度为 width 的字符串，原字符串右对齐，前面填充0</td></tr><tr><td align="left">40</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isdecimal.html" target="_blank" rel="noopener">isdecimal()</a> 检查字符串是否只包含十进制字符，如果是返回 true，否则返回 false。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      Python学习笔记5-字符串
    
    </summary>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记3-循环语句</title>
    <link href="http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html"/>
    <id>http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html</id>
    <published>2020-11-14T20:45:53.000Z</published>
    <updated>2020-11-16T14:59:05.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="While：只要条件满足，就不断循环，条件不满足时退出循环。"><a href="#While：只要条件满足，就不断循环，条件不满足时退出循环。" class="headerlink" title="While：只要条件满足，就不断循环，条件不满足时退出循环。"></a>While：只要条件满足，就不断循环，条件不满足时退出循环。</h2><p>例如要计算100以内所有奇数之和：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt;= <span class="number">100</span>:</span><br><span class="line">  sum = sum + n</span><br><span class="line">  n = n + <span class="number">2</span></span><br><span class="line">  print(sum)</span><br></pre></td></tr></table></figure><h3 id="Break：在循环中，break语句可以提前退出循环"><a href="#Break：在循环中，break语句可以提前退出循环" class="headerlink" title="Break：在循环中，break语句可以提前退出循环"></a>Break：在循环中，break语句可以提前退出循环</h3><blockquote><p>for…else语句：当循环里的break没有被执行的时候，就会自动执行else</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#求100-201之间数字属于质数还是合数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>,<span class="number">201</span>):</span><br><span class="line">     <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>,i):</span><br><span class="line">          <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">               print(i,<span class="string">'是合数'</span>)</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line"><span class="comment">#注意else位置，在for...else语句：当循环里的break没有被执行的时候，就会自动执行else</span></span><br><span class="line">          print(i,<span class="string">'是质数'</span>)</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">50</span>: <span class="comment">#当n &lt; 50时，条件满足，执行break语句</span></span><br><span class="line">        <span class="keyword">break</span> <span class="comment">#break语句会结束当前循环</span></span><br><span class="line">    sum = sum + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><h3 id="Continue-在循环过程中，也可以通过continue语句，跳过当前的这次循环，直接开始下一次循环。"><a href="#Continue-在循环过程中，也可以通过continue语句，跳过当前的这次循环，直接开始下一次循环。" class="headerlink" title="Continue:在循环过程中，也可以通过continue语句，跳过当前的这次循环，直接开始下一次循环。"></a>Continue:在循环过程中，也可以通过continue语句，跳过当前的这次循环，直接开始下一次循环。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">10</span>:</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>: <span class="comment"># 如果n是偶数，执行continue语句</span></span><br><span class="line">        <span class="keyword">continue</span> <span class="comment"># continue语句会直接继续下一轮循环，后续的print()语句不会执行</span></span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure><h2 id="for…in：依次把list或tuple中的每个元素迭代出来"><a href="#for…in：依次把list或tuple中的每个元素迭代出来" class="headerlink" title="for…in：依次把list或tuple中的每个元素迭代出来"></a>for…in：依次把list或tuple中的每个元素迭代出来</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Michael</span><br><span class="line">Bob</span><br><span class="line">Tracy</span><br></pre></td></tr></table></figure><p>例如计算1-10的整数之和：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]:</span><br><span class="line">  sum = sum + n</span><br><span class="line">  print(sum)</span><br></pre></td></tr></table></figure><p>但是要计算1-100的整数之和，从1写到100有点困难，Python提供了一个<code>range()</code>函数，可以生成一个整数序列，再通过<code>list()</code>函数可以转换为list。比如range(5)生成的序列就是从0开始小于5的整数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(range(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>即计算1-100的和：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">101</span>):</span><br><span class="line">  sum = sum + n</span><br><span class="line">  print(sum)</span><br></pre></td></tr></table></figure><h2 id="pass-语句"><a href="#pass-语句" class="headerlink" title="pass 语句"></a>pass 语句</h2><p>Python pass是空语句，是为了保持程序结构的完整性。</p><p>pass 不做任何事情，一般用做占位语句，如下实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">while</span> <span class="literal">True</span>: ...     </span><br><span class="line">...<span class="keyword">pass</span>  <span class="comment"># 等待键盘中断 (Ctrl+C)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python学习笔记3-循环语句
    
    </summary>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记3-条件语句</title>
    <link href="http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5.html"/>
    <id>http://liqiyue.github.io/2020/11/15/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5.html</id>
    <published>2020-11-14T20:22:26.000Z</published>
    <updated>2020-11-14T20:49:30.979Z</updated>
    
    <content type="html"><![CDATA[<h2 id="if-和-else"><a href="#if-和-else" class="headerlink" title="if 和 else"></a>if 和 else</h2><p>Python条件语句是通过一条或多条语句的执行结果（True或者False）来决定执行的代码块。</p><p>可以通过下图来简单了解条件语句的执行过程:</p><p><img src="../../../../images/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/image-20201115043634001.png" alt="image-20201115043634001"></p><p>if 语句的判断条件可以用&gt;（大于）、&lt;(小于)、==（等于）、&gt;=（大于等于）、&lt;=（小于等于）来表示其关系。</p><p>当判断条件为多个值时，可以使用以下形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件判断<span class="number">1</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">2</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">2</span>&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">3</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">3</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;执行<span class="number">4</span>&gt;</span><br></pre></td></tr></table></figure><p><code>if</code>语句执行有个特点，它是从上往下判断，如果在某个判断上是<code>True</code>，把该判断对应的语句执行后，就忽略掉剩下的<code>elif</code>和<code>else</code></p><p>Python程序语言指定任何非0和非空（null）值为true，0 或者 null为false。</p><p>Python 编程中 if 语句用于控制程序的执行，基本形式为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件：</span><br><span class="line">    执行语句……</span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">    执行语句……</span><br></pre></td></tr></table></figure><p>其中”判断条件”成立时（非零），则执行后面的语句，而执行内容可以多行，以缩进来区分表示同一范围。</p><p>else 为可选语句，当需要在条件不成立时执行相关语句。</p><p>Gif 演示：</p><p><img src="../../../../images/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/006faQNTgw1f5wnm0mcxrg30ci07o47l.gif" alt="img"></p><blockquote><p>当if有多个条件时可使用括号来区分判断的先后顺序，括号中的判断优先执行，此外 and 和 or 的优先级低于&gt;（大于）、&lt;（小于）等判断符号，即大于和小于在没有括号的情况下会比与或要优先判断。</p></blockquote>]]></content>
    
    <summary type="html">
    
      Python学习笔记3-条件语句
    
    </summary>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记2-Python基础</title>
    <link href="http://liqiyue.github.io/2020/11/12/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-Python%E5%9F%BA%E7%A1%80.html"/>
    <id>http://liqiyue.github.io/2020/11/12/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-Python%E5%9F%BA%E7%A1%80.html</id>
    <published>2020-11-12T12:16:07.000Z</published>
    <updated>2020-11-14T20:22:32.368Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注释的使用"><a href="#注释的使用" class="headerlink" title="注释的使用"></a>注释的使用</h1><h2 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h2><p>以<code>#</code>开头的语句是注释，注释是给人看的，可以是任意内容，解释器会忽略掉注释。为单行注释，只对本行有效。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello,world'</span>) <span class="comment">#我是注释</span></span><br><span class="line">输出结果：</span><br><span class="line">hello,world</span><br></pre></td></tr></table></figure><h2 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h2><p>三个引号开始，三个引号结束，中间的内容也是注释，为多行注释，允许换行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello,world'</span>) <span class="comment">#我是注释</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">我是注释</span></span><br><span class="line"><span class="string">多行注释</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">输出结果：</span><br><span class="line">hello,world</span><br><span class="line"><span class="comment">#Ctrl + / 快捷键给代码添加或删除注释（Mac中为command + /）</span></span><br></pre></td></tr></table></figure><p>Python程序是<strong>大小写敏感</strong>的，如果写错了大小写，程序会报错。</p><h1 id="常见的数据类型"><a href="#常见的数据类型" class="headerlink" title="常见的数据类型"></a>常见的数据类型</h1><p>在Python中，数据都有各自对应的类型：</p><h2 id="整数-int"><a href="#整数-int" class="headerlink" title="整数 int"></a>整数 int</h2><p>处理任意大小的整数，当然包括负整数，在程序中的表示方法和数学上的写法一模一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(type(<span class="number">12</span>))</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">int</span>'&gt;         # <span class="title">int</span>整数类型</span></span><br></pre></td></tr></table></figure><h2 id="浮点数-float"><a href="#浮点数-float" class="headerlink" title="浮点数 float"></a>浮点数 float</h2><p>浮点数也就是小数,之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(type(<span class="number">1.2</span>))</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">float</span>'&gt;         # <span class="title">float</span> 类型</span></span><br></pre></td></tr></table></figure><h2 id="复数类型-complex"><a href="#复数类型-complex" class="headerlink" title="复数类型 complex"></a>复数类型 complex</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(type((<span class="number">-1</span>) ** <span class="number">0.5</span>))</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">complex</span>'&gt;       #<span class="title">complex</span>类型</span></span><br></pre></td></tr></table></figure><h2 id="字符串-str"><a href="#字符串-str" class="headerlink" title="字符串 str"></a>字符串 str</h2><p>字符串类型其实就是一段普通的文字，python里的字符串要求使用一对单引号或者双引号来包裹。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'今天天气好晴朗，处处好风光呀好风光'</span>)</span><br><span class="line">print(<span class="string">'56'</span>)  <span class="comment"># 这里的56是字符串类型</span></span><br><span class="line">print(<span class="number">56</span>)   <span class="comment">#这里的56是int类型</span></span><br></pre></td></tr></table></figure><h2 id="布尔值-bool"><a href="#布尔值-bool" class="headerlink" title="布尔值 bool"></a>布尔值 bool</h2><p>布尔值和布尔代数的表示完全一致，一个布尔值只有<code>True</code>、<code>False</code>两种值，要么是<code>True</code>，要么是<code>False</code> 。不能被赋值<br>在Python中，可以直接用<code>True</code>、<code>False</code>表示布尔值（<strong>请注意大小写</strong>），也可以通过布尔运算计算出来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> &gt; <span class="number">2</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> &gt; <span class="number">5</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="空值-none"><a href="#空值-none" class="headerlink" title="空值 none"></a>空值 none</h2><p>空值是Python里一个特殊的值，用<code>None</code>表示。<code>None</code>不能理解为<code>0</code>，因为<code>0</code>是有意义的，而<code>None</code>是一个特殊的空值。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量的概念基本上和初中代数的方程变量是一致的，只是在计算机程序中，变量不仅可以是数字，还可以是任意数据类型。</p><p>变量在程序中就是用一个变量名表示了，变量名必须是大小写英文、数字和<code>_</code>的组合，且不能用数字开头。也不可使用关键字，比如if/for/else/while/try等等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span>            <span class="comment">#变量a是一个整数。</span></span><br><span class="line">t_007 = <span class="string">'T007'</span>   <span class="comment">#变量t_007是一个字符串。</span></span><br><span class="line">Answer = <span class="literal">True</span>    <span class="comment">#变量Answer是一个布尔值True。</span></span><br></pre></td></tr></table></figure><p>在Python中，等号<code>=</code>是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">123</span> <span class="comment"># a是整数</span></span><br><span class="line">print(a)</span><br><span class="line">a = <span class="string">'ABC'</span> <span class="comment"># a变为字符串</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span> </span><br><span class="line">ABC</span><br></pre></td></tr></table></figure><h2 id="dict-和-set"><a href="#dict-和-set" class="headerlink" title="dict 和 set"></a>dict 和 set</h2><p><code>dict</code>全称dictionary，在其他语言中也称为map，使用键-值（key-value）存储，具有极快的查找速度。</p><p>和<code>list</code>比较，<code>dict</code>有以下几个特点：</p><ul><li>查找和插入的速度极快，不会随着key的增加而变慢；</li><li>需要占用大量的内存，内存浪费多。</li></ul><p>而list相反：</p><ul><li><p>查找和插入的时间随着元素的增加而增加；</p></li><li><p>占用空间小，浪费内存很少。</p></li></ul><p>所以，<code>dict</code>是用空间来换取时间的一种方法。</p><p><code>dict</code>可以用在需要高速查找的很多地方，在Python代码中几乎无处不在，正确使用dict非常重要，需要牢记的第一条就是<code>dict</code>的key必须是<strong>不可变对象</strong>。</p><p>这是因为<code>dict</code>根据key来计算value的存储位置，如果每次计算相同的key得出的结果不同，那dict内部就完全混乱了。这个通过key计算位置的算法称为哈希算法（Hash）。</p><p>要保证hash的正确性，作为key的对象就不能变。在Python中，字符串、整数等都是不可变的，因此，可以放心地作为key。而<code>list</code>是可变的，就不能作为key：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Bob'</span>: <span class="number">75</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Michael'</span>]</span><br><span class="line"><span class="number">95</span></span><br></pre></td></tr></table></figure><h2 id="list和tuple"><a href="#list和tuple" class="headerlink" title="list和tuple"></a>list和tuple</h2><p>Python内置的一种数据类型是列表：list。list是一种有序的集合，可以随时添加和删除其中的元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">L = [</span><br><span class="line">    [<span class="string">'Apple'</span>, <span class="string">'Google'</span>, <span class="string">'Microsoft'</span>],</span><br><span class="line">    [<span class="string">'Java'</span>, <span class="string">'Python'</span>, <span class="string">'Ruby'</span>, <span class="string">'PHP'</span>],</span><br><span class="line">    [<span class="string">'Adam'</span>, <span class="string">'Bart'</span>, <span class="string">'Lisa'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印Apple:</span></span><br><span class="line">print(L[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line"><span class="comment"># 打印Python:</span></span><br><span class="line">print(L[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 打印Lisa:</span></span><br><span class="line">print(L[<span class="number">2</span>][<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">12</span></span><br><span class="line">print(bin(a))         <span class="comment">#使用bin内置函数可以将数字转换为二进制</span></span><br><span class="line">print(oct(a))         <span class="comment">#使用oct内置函数可以将数字转换为八进制</span></span><br><span class="line">print(hex(a))         <span class="comment">#使用hex内置函数可以将数字转换为十六进制</span></span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><blockquote><p>因为不同的数据类型，在进行运算时，使用的运算规则时不一样的</p></blockquote><table><thead><tr><th align="center">函数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">int(x;[base])</td><td align="center">将x转换为一个整数</td></tr><tr><td align="center">float(x)</td><td align="center">将x转换为一个浮点数</td></tr><tr><td align="center">str(x)</td><td align="center">将对象x转换为字符串</td></tr><tr><td align="center">bool(x)</td><td align="center">将对象x转换为布尔值</td></tr></tbody></table><h1 id="查看数据类型"><a href="#查看数据类型" class="headerlink" title="查看数据类型"></a>查看数据类型</h1><p>使用type内置类可以查看一个变量对应的数据类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="string">'test'</span></span><br><span class="line">c = <span class="literal">True</span></span><br><span class="line">d = [<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王二'</span>,<span class="string">'麻子'</span>]</span><br><span class="line">e = <span class="number">3.14</span></span><br><span class="line">print(type(a))</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">int</span>'&gt;    #整数类型</span></span><br><span class="line"><span class="class"><span class="title">print</span><span class="params">(type<span class="params">(b)</span>)</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">str</span>'&gt;    #字符串类型</span></span><br><span class="line"><span class="class"><span class="title">print</span><span class="params">(type<span class="params">(c)</span>)</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">bool</span>'&gt;    #布尔类型</span></span><br><span class="line"><span class="class"><span class="title">print</span><span class="params">(type<span class="params">(d)</span>)</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">list</span>'&gt;    #列表类型</span></span><br><span class="line"><span class="class"><span class="title">print</span><span class="params">(type<span class="params">(e)</span>)</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">float</span>'&gt;    #浮点类型</span></span><br></pre></td></tr></table></figure><h1 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h1><h2 id="Print语句的使用"><a href="#Print语句的使用" class="headerlink" title="Print语句的使用"></a>Print语句的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(value, ..., sep=<span class="string">' '</span>, end=<span class="string">'\n'</span>, file=sys.stdout, flush=<span class="literal">False</span>)</span><br><span class="line">    value ：复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。</span><br><span class="line">    file:  a file-like object (stream); defaults to the current sys.stdout.</span><br><span class="line">    sep:   string inserted between values, default a space.</span><br><span class="line">    end:   string appended after the last value, default a newline.</span><br><span class="line">    flush: whether to forcibly flush the stream.</span><br></pre></td></tr></table></figure><ul><li>sep：表示输出时，每个值之间使用哪种字符作为分割符，默认使用空格作为分割符</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello'</span>,<span class="string">'world'</span>,<span class="string">'da'</span>,<span class="string">'jia'</span>,<span class="string">'hao'</span>,sep=<span class="string">'+'</span>)</span><br><span class="line">输出：</span><br><span class="line">hello+world+da+jia+hao</span><br></pre></td></tr></table></figure><ul><li>end：当执行完一个print语句以后，接下来要输出的字符。默认\n表示换行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello'</span>,<span class="string">'world'</span>,<span class="string">'da'</span>,<span class="string">'jia'</span>,<span class="string">'hao'</span>,end=<span class="string">'---------'</span>)</span><br><span class="line">print(<span class="string">'大哥你好'</span>)</span><br><span class="line">输出：</span><br><span class="line">hello world da jia hao---------大哥你好</span><br></pre></td></tr></table></figure><ul><li>file：将输出内容写入到文件中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"1.txt"</span>, <span class="string">"w"</span>)    <span class="comment"># 打开文件以便写入</span></span><br><span class="line">print(<span class="string">"Correlation is "</span>, file=f)</span><br><span class="line">f.close  <span class="comment">#  关闭文件</span></span><br></pre></td></tr></table></figure><ul><li>flush：输出是否被缓存通常决定于 file，但如果 flush 关键字参数为 True，流会被强制刷新。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">print(<span class="string">"---RUNOOB EXAMPLE ： Loading 效果---"</span>)</span><br><span class="line">print(<span class="string">"Loading"</span>,end = <span class="string">""</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    print(<span class="string">"."</span>,end = <span class="string">''</span>,flush = <span class="literal">True</span>)</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">输出</span><br><span class="line">---RUNOOB EXAMPLE ： Loading 效果---</span><br><span class="line">Loading....................</span><br><span class="line">进程已结束，退出代码 <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">birth = input(<span class="string">'birth: '</span>)</span><br><span class="line"><span class="keyword">if</span> birth &lt; <span class="number">2000</span>:</span><br><span class="line">    print(<span class="string">'00前'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'00后'</span>)</span><br></pre></td></tr></table></figure><p>输入1982，结果报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: unorderable types: str() &gt; int()</span><br></pre></td></tr></table></figure><p>这是因为input()返回的数据类型是str，str不能直接和整数比较，必须先把str转换成整数。Python提供了int()函数来完成这件事情：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = input(<span class="string">'birth: '</span>)</span><br><span class="line">birth = int(s)</span><br><span class="line"><span class="keyword">if</span> birth &lt; <span class="number">2000</span>:</span><br><span class="line">    print(<span class="string">'00前'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'00后'</span>)</span><br></pre></td></tr></table></figure><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><ul><li>Python2中两个整数相除得到的结果是一个整数，10/3=3</li><li>Python3中两个整数相除得到的结果是一个浮点数，10/3=3.3333333</li><li>在Python中，数字和字符串之间，不能做加法运算。</li></ul><p>以a = 10,b = 20为例计算</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td><td align="center">a+b=30</td></tr><tr><td align="center">-</td><td align="center">减</td><td align="center">b-a=10</td></tr><tr><td align="center">*</td><td align="center">乘</td><td align="center">a*b=200</td></tr><tr><td align="center">/</td><td align="center">除</td><td align="center">b/a=2</td></tr><tr><td align="center">//</td><td align="center">取整数</td><td align="center">b//a=2</td></tr><tr><td align="center">%</td><td align="center">取余数</td><td align="center">b&amp;a=0</td></tr><tr><td align="center">**</td><td align="center">幂运算</td><td align="center">a**b=100000000000000000000</td></tr><tr><td align="center">()</td><td align="center">小括号</td><td align="center">提高运算优先级,比如（1+2）*3</td></tr></tbody></table><blockquote><p>注意：混合运算时，优先级顺序为<code>**</code>高于<code>*</code>,<code>/</code>,<code>%</code>,<code>//</code>高于<code>+</code>,<code>-</code>,为了避免歧义，建议使用（）处理运算符优先级，并且，不同类型的数字在进行混合运算时，整数将会转换为浮点数进行计算。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello'</span> + <span class="string">'world'</span>)   </span><br><span class="line">输出： <span class="comment">#加法运算符，将两个或多个字符串拼接为一个字符串</span></span><br><span class="line">helloworld</span><br><span class="line">print(<span class="string">'18'</span> + <span class="number">1</span>)       </span><br><span class="line">输出： <span class="comment">#在Python中，字符串和数字不能做加法运算</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/Users/st/Desktop/Day1/1.py"</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(<span class="string">'18'</span> + <span class="number">1</span>)</span><br><span class="line">TypeError: can only concatenate str (<span class="keyword">not</span> <span class="string">"int"</span>) to str</span><br><span class="line">print(<span class="string">'hello'</span> * <span class="number">3</span>)</span><br><span class="line">输出： <span class="comment">#乘法运算符，可以用于数字和字符串之间，用来将一个字符串重复多次输出</span></span><br><span class="line">hellohellohello</span><br></pre></td></tr></table></figure><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">==</td><td align="left">等于 - 比较对象是否相等</td><td align="left">(a == b) 返回 False。</td></tr><tr><td align="left">!=</td><td align="left">不等于 - 比较两个对象是否不相等</td><td align="left">(a != b) 返回 true.</td></tr><tr><td align="left">&lt;&gt;</td><td align="left">不等于 - 比较两个对象是否不相等。<strong>python3 已废弃。</strong></td><td align="left">(a &lt;&gt; b) 返回 true。这个运算符类似 != 。</td></tr><tr><td align="left">&gt;</td><td align="left">大于 - 返回x是否大于y</td><td align="left">(a &gt; b) 返回 False。</td></tr><tr><td align="left">&lt;</td><td align="left">小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。</td><td align="left">(a &lt; b) 返回 true。</td></tr><tr><td align="left">&gt;=</td><td align="left">大于等于 - 返回x是否大于等于y。</td><td align="left">(a &gt;= b) 返回 False。</td></tr><tr><td align="left">&lt;=</td><td align="left">小于等于 - 返回x是否小于等于y。</td><td align="left">(a &lt;= b) 返回 true。</td></tr></tbody></table><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">简单的赋值运算符</td><td align="left">c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td align="left">+=</td><td align="left">加法赋值运算符</td><td align="left">c += a 等效于 c = c + a</td></tr><tr><td align="left">-=</td><td align="left">减法赋值运算符</td><td align="left">c -= a 等效于 c = c - a</td></tr><tr><td align="left">*=</td><td align="left">乘法赋值运算符</td><td align="left">c *= a 等效于 c = c * a</td></tr><tr><td align="left">/=</td><td align="left">除法赋值运算符</td><td align="left">c /= a 等效于 c = c / a</td></tr><tr><td align="left">%=</td><td align="left">取模赋值运算符</td><td align="left">c %= a 等效于 c = c % a</td></tr><tr><td align="left">**=</td><td align="left">幂赋值运算符</td><td align="left">c *<em>= a 等效于 c = c *</em> a</td></tr><tr><td align="left">//=</td><td align="left">取整除赋值运算符</td><td align="left">c //= a 等效于 c = c // a</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li>and：只有所有运算都为True,结果才为True，只要有一个False，结果为False<ul><li>当前面一个False时，将不会计算后面的数值。</li></ul></li><li>or：只有所有的运算都为False，结果才为False，只要一个True，结果为True<ul><li>当前面一个True时，将不会计算后面的数值。</li></ul></li><li>not：当运算为True时，输出False，当运算为False时，输出True。</li></ul><p>以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th align="left">运算符</th><th align="left">逻辑表达式</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">and</td><td align="left">x and y</td><td align="left">布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td><td align="left">(a and b) 返回 20。</td></tr><tr><td align="left">or</td><td align="left">x or y</td><td align="left">布尔”或” - 如果 x 是非 0，它返回 x 的值，否则它返回 y 的计算值。</td><td align="left">(a or b) 返回 10。</td></tr><tr><td align="left">not</td><td align="left">not x</td><td align="left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td align="left">not(a and b) 返回 False</td></tr></tbody></table><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><p>以下表格列出了从最高到最低优先级的所有运算符：</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">**</td><td align="center">指数 (最高优先级)</td></tr><tr><td align="center">~ + -</td><td align="center">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td align="center">* / % //</td><td align="center">乘，除，取模和取整除</td></tr><tr><td align="center">+ -</td><td align="center">加法减法</td></tr><tr><td align="center">&gt;&gt; &lt;&lt;</td><td align="center">右移，左移运算符</td></tr><tr><td align="center">&amp;</td><td align="center">位 ‘AND’</td></tr><tr><td align="center">^ |</td><td align="center">位运算符</td></tr><tr><td align="center">&lt;= &lt; &gt; &gt;=</td><td align="center">比较运算符</td></tr><tr><td align="center">&lt;&gt; == !=</td><td align="center">等于运算符</td></tr><tr><td align="center">= %= /= //= -= += <em>= *</em>=</td><td align="center">赋值运算符</td></tr><tr><td align="center">is is not</td><td align="center">身份运算符</td></tr><tr><td align="center">in not in</td><td align="center">成员运算符</td></tr><tr><td align="center">not and or</td><td align="center">逻辑运算符</td></tr></tbody></table><h1 id="字符串和编码"><a href="#字符串和编码" class="headerlink" title="字符串和编码"></a>字符串和编码</h1><h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><table><thead><tr><th>占位符</th><th align="center">替换内容</th></tr></thead><tbody><tr><td>%d</td><td align="center">整数</td></tr><tr><td>%f</td><td align="center">浮点数</td></tr><tr><td>%s</td><td align="center">字符串</td></tr><tr><td>%x</td><td align="center">十六进制整数</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#也可以用f格式</span></span><br><span class="line">month = <span class="number">8</span></span><br><span class="line">day = <span class="number">14</span></span><br><span class="line">print(<span class="string">f"今天是：2020年<span class="subst">&#123;month:<span class="number">02</span>d&#125;</span>月<span class="subst">&#123;day:<span class="number">2</span>d&#125;</span>日"</span>)</span><br><span class="line">今天是：<span class="number">2020</span>年<span class="number">08</span>月<span class="number">14</span>日</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python学习笔记2-Python基础
    
    </summary>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记2-练习</title>
    <link href="http://liqiyue.github.io/2020/11/12/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-%E7%BB%83%E4%B9%A0.html"/>
    <id>http://liqiyue.github.io/2020/11/12/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-%E7%BB%83%E4%B9%A0.html</id>
    <published>2020-11-12T11:56:02.000Z</published>
    <updated>2020-11-16T08:27:15.119Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>写出判断一个数是否能同时被3和7整除的条件语句，并打印结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如：输入 21 打印 True,输入 9 打印 False</span></span><br><span class="line">age = int(input(<span class="string">'age:'</span>))</span><br><span class="line"><span class="keyword">if</span> age%<span class="number">3</span> == <span class="number">0</span> <span class="keyword">and</span> age%<span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">   print(<span class="string">'True'</span>.format(age))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   print(<span class="string">'False'</span>.format(age))</span><br></pre></td></tr></table></figure></li><li><p>写出判断一个数是否能同时被3或者7整除，但不能同时被3和7整除的条件语句，并打印结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如：输入 14 打印 True,输入 4 打印 False,输入 21 打印 False</span></span><br><span class="line">age = int(input(<span class="string">'age:'</span>))</span><br><span class="line"><span class="keyword">if</span> (age%<span class="number">3</span> == <span class="number">0</span> <span class="keyword">and</span> age%<span class="number">7</span> != <span class="number">0</span>) <span class="keyword">or</span> (age%<span class="number">3</span> != <span class="number">0</span> <span class="keyword">and</span> age%<span class="number">7</span> == <span class="number">0</span>):</span><br><span class="line">    print(<span class="string">'True'</span>.format(age))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'False'</span>.format(age))</span><br></pre></td></tr></table></figure></li><li><p>输入年，写代码判断输入的年是否为闰年，并且打印相应的结果。（闰年：能被4整除但是不能被100整除或者能被400整除的年）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如：输入 2020 打印 True,输入 2011 打印 False</span></span><br><span class="line">year = int(input(<span class="string">'year:'</span>))</span><br><span class="line"><span class="keyword">if</span> (year%<span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year%<span class="number">100</span> != <span class="number">0</span>) <span class="keyword">or</span> (year%<span class="number">400</span> == <span class="number">0</span>):</span><br><span class="line">    print(<span class="string">'True'</span>.format(year))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'False'</span>.format(year))</span><br></pre></td></tr></table></figure></li><li><p>假设今天的上课时间为15678秒，编程计算今天上课时间是多少小时，多少分钟，多少秒，以xx时xx分xx秒的方式表示出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如：时间 67 秒 -&gt; 0 时 1 分 7 秒</span></span><br><span class="line">time_list = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">time  = int(input(<span class="string">'请输入时间:'</span>))</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> time != <span class="number">0</span> <span class="keyword">and</span> i&lt;<span class="number">3</span>:</span><br><span class="line">    time_list[i]=time % <span class="number">60</span></span><br><span class="line">    time = time // <span class="number">60</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">print(<span class="string">'今天上课时间为&#123;&#125;时&#123;&#125;分&#123;&#125;秒'</span>.format(time_list[<span class="number">2</span>],time_list[<span class="number">1</span>],time_list[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure></li><li><p>定义两个变量保存一个人的身高和体重，编程实现判断这个人的身材是否正常！</p><p>公式：<code>体重Kg</code>/<code>身高m</code>的<code>平方值</code>在18.5~24.9之间属于正常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如：输入体重：55，输入身高1.55，输出结果：True</span></span><br><span class="line">height  = float(input(<span class="string">'清除入您的身高：'</span>))</span><br><span class="line">weight  = float(input(<span class="string">'清除入您的体重：'</span>))</span><br><span class="line">result = weight/(height**<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span>   <span class="number">24.9</span> &gt;= result &gt;=<span class="number">18.5</span>:</span><br><span class="line">    print(<span class="string">'正常'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'不正常'</span>)</span><br></pre></td></tr></table></figure><ol start="6"><li><p>石头剪刀布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">player = int(input(<span class="string">'请输入（0）剪刀 （1）石头 （2）布:'</span>))</span><br><span class="line">print(<span class="string">'用户输入的是'</span>,player)</span><br><span class="line">computer = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">print(<span class="string">'电脑出的是'</span>,computer)</span><br><span class="line"><span class="keyword">if</span> (player == <span class="number">0</span> <span class="keyword">and</span> computer ==<span class="number">2</span>) <span class="keyword">or</span> (player == <span class="number">1</span> <span class="keyword">and</span> computer == <span class="number">0</span>) <span class="keyword">or</span> (player == <span class="number">2</span> <span class="keyword">and</span> computer ==<span class="number">1</span>):</span><br><span class="line">    print(<span class="string">'You Win'</span>)</span><br><span class="line"><span class="keyword">elif</span> player == computer:</span><br><span class="line">    print(<span class="string">'平局'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'You Lost'</span>)</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      Python学习笔记2-练习
    
    </summary>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://liqiyue.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Huawei Wlan配置802.1X认证示例</title>
    <link href="http://liqiyue.github.io/2020/11/10/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B.html"/>
    <id>http://liqiyue.github.io/2020/11/10/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B.html</id>
    <published>2020-11-10T12:56:05.000Z</published>
    <updated>2020-11-12T11:52:49.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>用户接入WLAN网络，使用802.1X客户端进行认证，输入正确的用户名和密码后可以无线上网。且在覆盖区域内移动发生漫游时，不影响用户的业务使用。</p><h2 id="组网需求"><a href="#组网需求" class="headerlink" title="组网需求"></a>组网需求</h2><ul><li><p>AC组网方式：旁挂二层组网。</p></li><li><p>DHCP部署方式：AC作为DHCP服务器为AP分配IP地址，SwitchB作为DHCP服务器为STA分配IP地址。</p></li><li><p>业务数据转发方式：直接转发。</p></li><li><p>WLAN认证方式：WPA-WPA2+802.1X+AES。</p><p>配置802.1X认证组网图<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054308.png" alt="img"></p></li></ul><h2 id="数据规划"><a href="#数据规划" class="headerlink" title="数据规划"></a>数据规划</h2><p> AC数据规划表</p><table><thead><tr><th>配置项</th><th>数据</th></tr></thead><tbody><tr><td>管理VLAN</td><td>VLAN100</td></tr><tr><td>业务VLAN</td><td>VLAN101</td></tr><tr><td>AC的源接口</td><td>VLANIF100：10.23.100.1/24</td></tr><tr><td>DHCP服务器</td><td>AC作为DHCP服务器为AP分配IP地址，SwitchB作为DHCP服务器为STA分配IP地址</td></tr><tr><td>AP的IP地址池</td><td>10.23.100.2～10.23.100.254/24</td></tr><tr><td>STA的IP地址池</td><td>10.23.101.2～10.23.101.254/24</td></tr><tr><td>RADIUS认证参数</td><td>RADIUS服务器模板名称：wlan-netIP地址：10.23.103.1认证端口号：1812共享密钥：huawei@123认证方案：wlan-net</td></tr><tr><td>802.1X接入模板</td><td>名称：wlan-net认证方式：EAP</td></tr><tr><td>认证模板</td><td>名称：wlan-net引用模板和认证方案：802.1X接入模板wlan-net、RADIUS服务器模板wlan-net、认证方案wlan-net</td></tr><tr><td>AP组</td><td>名称：ap-group1引用模板：VAP模板wlan-net、域管理模板default</td></tr><tr><td>域管理模板</td><td>名称：default国家码：中国</td></tr><tr><td>SSID模板</td><td>名称：wlan-netSSID名称：wlan-net</td></tr><tr><td>安全模板</td><td>名称：wlan-net安全策略：WPA-WPA2+802.1X+AES</td></tr><tr><td>VAP模板</td><td>名称：wlan-net转发模式：直接转发业务VLAN：VLAN101引用模板：SSID模板wlan-net、安全模板wlan-net、认证模板wlan-net</td></tr></tbody></table><h2 id="配置思路"><a href="#配置思路" class="headerlink" title="配置思路"></a>配置思路</h2><ol><li>配置AP、AC和周边网络设备之间实现网络互通。</li><li>使用配置向导，配置AC系统参数。</li><li>使用配置向导，配置AP在AC上线。</li><li>使用配置向导在AC上配置WLAN相关业务。在配置安全策略时，选择802.1X和RADIUS认证，设置RADIUS服务器参数。</li><li>配置第三方服务器。</li></ol><blockquote><p>AC侧配置的RADIUS共享密钥需要和服务器侧保持一致。</p></blockquote><h2 id="配置注意事项"><a href="#配置注意事项" class="headerlink" title="配置注意事项"></a>配置注意事项</h2><ul><li><p>纯组播报文由于协议要求在无线空口没有ACK机制保障，且无线空口链路不稳定，为了纯组播报文能够稳定发送，通常会以低速报文形式发送。如果网络侧有大量异常组播流量涌入，则会造成无线空口拥堵。为了减小大量低速组播报文对无线网络造成的冲击，建议配置组播报文抑制功能。配置前请确认是否有组播业务，如果有，请谨慎配置限速值。</p><ul><li>业务数据转发方式采用直接转发时，建议在直连AP的交换机接口上配置组播报文抑制。</li><li>业务数据转发方式采用隧道转发时，建议在AC的流量模板下配置组播报文抑制。</li></ul><p>配置方法请参见：<a href="http://support.huawei.com/hedex/hdx.do?docid=EDOC1100025388&id=ZH-CN_TOPIC_0117428937&text=null&lang=zh" target="_blank" rel="noopener">如何配置组播报文抑制，减小大量低速组播报文对无线网络造成的冲击？</a></p></li><li><p>建议在与AP直连的设备接口上配置端口隔离，如果不配置端口隔离，尤其是业务数据转发方式采用直接转发时，可能会在VLAN内形成大量不必要的广播报文，导致网络阻塞，影响用户体验。</p></li><li><p>隧道转发模式下，管理VLAN和业务VLAN不能配置为同一VLAN，且AP和AC之间只能放通管理VLAN，不能放通业务VLAN。</p></li></ul><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="配置周边设备"><a href="#配置周边设备" class="headerlink" title="配置周边设备"></a>配置周边设备</h3><ul><li>配置接入交换机SwitchA的接口GE0/0/1和GE0/0/2加入VLAN100和VLAN101。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] sysname SwitchA</span><br><span class="line">[SwitchA] vlan batch <span class="number">100</span> <span class="number">101</span></span><br><span class="line">[SwitchA] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">1</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port trunk pvid vlan <span class="number">100</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span> <span class="number">101</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port-isolate enable</span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] quit</span><br><span class="line">[SwitchA] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">2</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span> <span class="number">101</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] quit</span><br></pre></td></tr></table></figure><ul><li>配置汇聚交换机SwitchB的接口GE0/0/1加入VLAN100和VLAN101，GE0/0/2加入VLAN100和VLAN102，GE0/0/3加入VLAN103，GE0/0/4加入VLAN104，创建VLANIF102、VLANIF103和VLANIF104接口，并配置下一跳为Router的缺省路由。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] sysname SwitchB</span><br><span class="line">[SwitchB] vlan batch <span class="number">100</span> to <span class="number">104</span></span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">1</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span> <span class="number">101</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] quit</span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">2</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span> <span class="number">102</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] quit</span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">3</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] port trunk pvid vlan <span class="number">103</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">103</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] quit</span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">4</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">4</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">4</span>] port trunk pvid vlan <span class="number">104</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">4</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">104</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">4</span>] quit</span><br><span class="line">[SwitchB] interface vlanif <span class="number">102</span></span><br><span class="line">[SwitchB-Vlanif102] ip address <span class="number">10.23</span><span class="number">.102</span><span class="number">.1</span> <span class="number">24</span></span><br><span class="line">[SwitchB-Vlanif102] quit</span><br><span class="line">[SwitchB] interface vlanif <span class="number">103</span></span><br><span class="line">[SwitchB-Vlanif103] ip address <span class="number">10.23</span><span class="number">.103</span><span class="number">.2</span> <span class="number">24</span></span><br><span class="line">[SwitchB-Vlanif103] quit</span><br><span class="line">[SwitchB] interface vlanif <span class="number">104</span></span><br><span class="line">[SwitchB-Vlanif104] ip address <span class="number">10.23</span><span class="number">.104</span><span class="number">.1</span> <span class="number">24</span></span><br><span class="line">[SwitchB-Vlanif104] quit</span><br><span class="line">[SwitchB] ip route-static <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">10.23</span><span class="number">.104</span><span class="number">.2</span></span><br></pre></td></tr></table></figure><ul><li>配置Router的接口GE0/0/1的IP地址，并配置指向STA网段的静态路由。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt; system-view</span><br><span class="line">[Huawei] sysname Router</span><br><span class="line">[Router] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">1</span></span><br><span class="line">[Router-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] ip address <span class="number">10.23</span><span class="number">.104</span><span class="number">.2</span> <span class="number">24</span></span><br><span class="line">[Router-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] quit</span><br><span class="line">[Router] ip route-static <span class="number">10.23</span><span class="number">.101</span><span class="number">.0</span> <span class="number">24</span> <span class="number">10.23</span><span class="number">.104</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><h3 id="配置DHCP服务器为STA分配IP地址"><a href="#配置DHCP服务器为STA分配IP地址" class="headerlink" title="配置DHCP服务器为STA分配IP地址"></a>配置DHCP服务器为STA分配IP地址</h3><ul><li>在SwitchB上配置VLANIF101接口为STA提供IP地址。</li></ul><blockquote><p>DNS服务器地址请根据实际需要配置。常用配置方法如下：</p><ul><li>接口地址池场景，需要在VLANIF接口视图下执行命令<code>dhcp server dns-list</code> <em>ip-address</em> &amp;&lt;1-8&gt;。</li><li>全局地址池场景，需要在IP地址池视图下执行命令<code>dns-list</code> <em>ip-address</em> &amp;&lt;1-8&gt;。</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SwitchB] dhcp enable</span><br><span class="line">[SwitchB] interface vlanif <span class="number">101</span></span><br><span class="line">[SwitchB-Vlanif101] ip address <span class="number">10.23</span><span class="number">.101</span><span class="number">.1</span> <span class="number">24</span></span><br><span class="line">[SwitchB-Vlanif101] dhcp select interface</span><br><span class="line">[SwitchB-Vlanif101] quit</span><br></pre></td></tr></table></figure><h3 id="配置AC系统参数"><a href="#配置AC系统参数" class="headerlink" title="配置AC系统参数"></a>配置AC系统参数</h3><h4 id="配置AC基本参数。"><a href="#配置AC基本参数。" class="headerlink" title="配置AC基本参数。"></a>配置AC基本参数。</h4><ul><li><p>单击“配置 &gt; 配置向导 &gt; AC”，进入“AC基本配置”页面。</p></li><li><p>“所在国家/地区”按实际情况选择，以“中国”为例。“系统时间”配置为“手动设置”。“日期和时间”配置为“使用PC当前时间”。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054347.png" alt="点击放大"></p><ul><li>单击页面下方的“下一步”，进入“端口配置”页面。</li></ul><h4 id="配置端口。"><a href="#配置端口。" class="headerlink" title="配置端口。"></a>配置端口。</h4><ul><li>选择接口“GigabitEthernet0/0/1”，展开“批量修改”，选择“接口类型”为“Trunk”，将“GigabitEthernet0/0/1”加入VLAN100（管理VLAN）和VLAN102。</li></ul><blockquote><p>如果AC直接连接AP，需要在AC直连AP的接口上配置缺省VLAN为管理VLAN100。</p></blockquote><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054414.png" alt="点击放大"></p><ul><li><p>单击“应用”，在弹出的提示对话框中单击“确定”，完成配置。</p></li><li><p>单击“下一步”，进入“网络互联配置”页面。</p></li></ul><h4 id="配置网络互联。"><a href="#配置网络互联。" class="headerlink" title="配置网络互联。"></a>配置网络互联。</h4><ul><li><p>配置“DHCP状态”为“ON”。</p></li><li><p>单击“接口配置”下的“新建”，进入“新建接口配置”页面。</p></li><li><p>配置接口VLANIF100的IP地址为10.23.100.1/24。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054374.png" alt="img"></p><ul><li>单击“DHCPv4地址池列表”下的“新建”，采用“接口地址池”，选择接口VLANIF100。</li></ul><blockquote><p>DNS服务器地址请根据实际需要配置。</p></blockquote><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054399.png" alt="点击放大"></p><ul><li><p>单击“确定”，完成VLANIF100接口地址池的配置。</p></li><li><p>以同样的方式配置虚拟接口VLANIF102的IP地址为10.23.102.2/24。</p></li><li><p>单击“静态路由表”下的“新建”，进入“新建静态路由表”页面。</p></li><li><p>配置“目的IP地址”为“10.23.103.0”，“子网掩码”为“24(255.255.255.0)”，“下一跳”为“10.23.102.1”。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054476.png" alt="img"></p><ul><li><p>单击“确定”，完成静态路由表的配置。</p></li><li><p>单击“下一步”。</p></li><li><p>单击“下一步”，进入“AC源地址”页面。</p></li></ul><h3 id="配置AC源地址。"><a href="#配置AC源地址。" class="headerlink" title="配置AC源地址。"></a>配置AC源地址。</h3><ul><li><p>“AC源地址”选择“VLANIF”，单击选择按钮，选择“Vlanif100”。<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054505.png" alt="点击放大"></p></li><li><p>单击“下一步”，进入“配置确认”页面。</p></li></ul><h3 id="配置确认。"><a href="#配置确认。" class="headerlink" title="配置确认。"></a>配置确认。</h3><ul><li>确认配置，单击“完成并继续AP上线配置”。</li></ul><h3 id="配置AP上线"><a href="#配置AP上线" class="headerlink" title="配置AP上线"></a>配置AP上线</h3><h4 id="配置AP上线。"><a href="#配置AP上线。" class="headerlink" title="配置AP上线。"></a>配置AP上线。</h4><ul><li>单击“批量导入”，进入“批量导入”页面。单击<img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054465.png" alt="img">，下载批量添加AP模板文件到本地。</li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054480.png" alt="img"></p><ul><li>在AP模板文件中填写AP信息，示例如下。如需添加多个AP，可以参照该示例在AP模板文件中填写多条AP信息。<ul><li>AP MAC地址：60de-4476-e360</li><li>AP SN：210235419610CB002287</li><li>AP名称：area_1</li><li>AP组：ap-group1</li></ul></li></ul><blockquote><ul><li><p>当选择“AP认证方式”为“MAC认证”时，AP MAC地址为必填项，AP SN可不填。</p></li><li><p>当选择“AP认证方式”为“SN认证”时，AP SN为必填项，AP MAC地址可不填。</p></li></ul><p>建议使用网络规划工具WLAN Planner将规划好的射频ID、AP信道、频宽、功率导出成.csv格式的表格，将表格中的这些信息填写到AP文件模板中，经度和纬度请根据实际情况配置。</p></blockquote><ul><li><p>单击“导入AP文件”后的<img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054549.png" alt="img">，选择填写后的模板文件，单击“导入”。</p></li><li><p>导入完成后，页面显示导入结果信息，单击“确定”，完成添加。</p></li><li><p>单击“下一步”，进入“AP分组”页面。</p></li><li><p>AP模板文件中已添加AP组信息，直接单击“下一步”，进入“配置确认”页面。</p></li></ul><h4 id="配置确认。-1"><a href="#配置确认。-1" class="headerlink" title="配置确认。"></a>配置确认。</h4><ul><li>确认配置，单击“完成并继续无线业务配置”。</li></ul><h3 id="配置WLAN业务"><a href="#配置WLAN业务" class="headerlink" title="配置WLAN业务"></a>配置WLAN业务</h3><ul><li><p>单击“新建”，进入“基本信息”页面。</p></li><li><p>配置SSID名称、转发模式、业务VLAN ID等信息。<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054541.png" alt="img"></p></li><li><p>单击“下一步”，进入“安全认证”页面。</p></li><li><p>配置“安全配置”为802.1x认证，并配置外置Radius服务器的相关参数。<img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054598.png" alt="点击放大"></p></li><li><p>单击“下一步”，进入“接入控制”页面。</p></li><li><p>选择“绑定AP组”为“ap-group1”。</p></li><li><p>单击“完成”。</p></li></ul><h3 id="配置AP的信道和功率"><a href="#配置AP的信道和功率" class="headerlink" title="配置AP的信道和功率"></a>配置AP的信道和功率</h3><ul><li>关闭AP射频的信道和功率自动调优功能，并手动配置AP的信道和功率。</li></ul><blockquote><p>射频的信道和功率自动调优功能默认开启，如果不关闭此功能则会导致手动配置不生效。</p></blockquote><ul><li><p>选择“配置 &gt; AP配置 &gt; AP配置 &gt; AP信息”，进入“AP列表”页面。</p></li><li><p>单击需要配置信道和功率的AP ID，进入“AP个性化配置”页面。</p></li><li><p>单击“射频管理”前的<img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054563.png" alt="img" style="zoom:200%;" />，显示当前射频管理下的模板。</p></li><li><p>单击“射频0”，进入射频0配置页面。在射频0配置页面关闭信道自动调优和功率自动调优功能，并设置信道为带宽20MHz信道6，发送功率为127dBm。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE802.1X%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112194054627.png" alt="点击放大"></p><ul><li><p>“射频1”上关闭信道自动调优和功率自动调优功能，并设置信道带宽20MHz信道149，发送功率127dBm的步骤与“射频0”类似，此处不再赘述。</p></li><li><p>单击“应用”，在弹出的提示对话框中单击“确定”，完成配置。</p></li></ul><h3 id="检查配置结果"><a href="#检查配置结果" class="headerlink" title="检查配置结果"></a>检查配置结果</h3><ul><li><p>完成配置后，用户可通过无线终端搜索到SSID为<code>wlan-net</code>的无线网络。</p></li><li><p>用户关联到无线网络上后，无线PC能够被分配相应的IP地址。</p></li><li><p>在STA上使用802.1X客户端进行认证，输入正确的用户名和密码后，STA认证成功，正常访问WLAN网络。需要根据设置的认证方式</p><p>PEAP</p><p>对客户端进行相应的配置。</p><ul><li>Windows XP系统下的配置<ol><li>首先在无线网络属性中，添加SSID为<code>wlan-net</code>，并选择认证方式为<code>WPA2</code>，加密使用的算法<code>AES</code>。</li><li>在“验证”选项卡中，选择EAP类型为<code>PEAP</code>，单击“属性”，去掉验证服务器证书选项（此处不验证服务器证书），单击“配置”，去掉自动使用Windows登录名和密码选项，然后单击“确定”。</li></ol></li><li>Windows 7系统下的配置<ol><li>进入管理无线网络页面，单击“添加”，选择手动创建网络配置文件，添加SSID为<code>wlan-net</code>，并选择认证方式为<code>WPA2-企业</code>，加密使用的算法<code>AES</code>，单击“下一步”。</li><li>单击“更改连接设置”，进入“无线网络属性”界面，选择“安全”页签，单击“设置”，取消勾选“验证服务器证书”（此处不验证服务器证书），单击“配置”，取消勾选“自动使用Windows登录名和密码”，单击“确定”。</li><li>单击“确定”，返回“无线网络属性”界面，单击“高级设置”，在“高级设置”界面，勾选“指定身份验证模式”，并选择身份验证模式为“用户身份验证”，单击“确定”。</li></ol></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Huawei Wlan配置802.1X认证示例
    
    </summary>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/categories/Huawei/"/>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/tags/Huawei/"/>
    
      <category term="Wlan" scheme="http://liqiyue.github.io/tags/Wlan/"/>
    
      <category term="Radius" scheme="http://liqiyue.github.io/tags/Radius/"/>
    
      <category term="802.1x" scheme="http://liqiyue.github.io/tags/802-1x/"/>
    
  </entry>
  
  <entry>
    <title>Huawei Wlan配置本地用户的内置Portal认证示例</title>
    <link href="http://liqiyue.github.io/2020/11/10/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B.html"/>
    <id>http://liqiyue.github.io/2020/11/10/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B.html</id>
    <published>2020-11-10T12:45:26.000Z</published>
    <updated>2020-11-12T11:35:57.531Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>某企业为了提高WLAN网络的安全性，采用portal认证方式，为了降低成本，将AC部署为Portal服务器，并选择本地认证方式，在AC上完成认证。</p><h2 id="组网需求"><a href="#组网需求" class="headerlink" title="组网需求"></a>组网需求</h2><ul><li>AC组网方式：旁挂二层组网。</li><li>DHCP部署方式：<ul><li>AC作为DHCP服务器为AP分配IP地址。</li><li>汇聚交换机SwitchB作为DHCP服务器为STA分配IP地址。</li></ul></li><li>业务数据转发方式：隧道转发。</li><li>认证方式：内置Portal认证。</li><li>安全策略：开放认证。</li></ul><p>配置WLAN本地用户的内置Portal认证示例组网图：</p><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112191710019.png" alt="img"></p><h2 id="数据规划"><a href="#数据规划" class="headerlink" title="数据规划"></a>数据规划</h2><p>AC数据规划表</p><table><thead><tr><th>配置项</th><th>数据</th></tr></thead><tbody><tr><td>AP管理VLAN</td><td>VLAN100</td></tr><tr><td>STA业务VLAN</td><td>VLAN101</td></tr><tr><td>DHCP服务器</td><td>AC作为DHCP服务器为AP分配IP地址汇聚交换机SwitchB作为DHCP服务器为STA分配IP地址，STA的默认网关为10.23.101.2</td></tr><tr><td>AP的IP地址池</td><td>10.23.100.2～10.23.100.254/24</td></tr><tr><td>STA的IP地址池</td><td>10.23.101.4～10.23.101.254/24</td></tr><tr><td>AC的源接口IP地址</td><td>VLANIF100：10.23.100.1/24</td></tr><tr><td>AP组</td><td>名称：ap-group1绑定模板：VAP模板wlan-net、域管理模板default</td></tr><tr><td>域管理模板</td><td>名称：default国家码：中国</td></tr><tr><td>SSID模板</td><td>名称：wlan-netSSID名称：wlan-net</td></tr><tr><td>安全模板</td><td>名称：wlan-net安全策略：开放认证</td></tr><tr><td>本地用户</td><td>用户名：guest密码：guest@123</td></tr><tr><td>认证方案</td><td>名称：wlan-net认证方案：本地认证</td></tr><tr><td>Portal接入模板</td><td>名称：wlan-net使用内置Portal服务器，其中内置Portal服务器的IP地址：10.23.101.3/24使用的SSL策略：default_policy端口号：20000</td></tr><tr><td>免认证规则模板</td><td>名称：default_free_rule免认证资源：DNS服务器的地址（8.8.8.8）</td></tr><tr><td>认证模板</td><td>名称：wlan-net绑定的模板和认证方案：Portal接入模板wlan-net、免认证规则模板default_free_rule、认证方案wlan-net</td></tr><tr><td>VAP模板</td><td>名称：wlan-net转发模式：隧道转发业务VLAN：VLAN101绑定模板：SSID模板wlan-net、安全模板wlan-net、认证模板wlan-net</td></tr></tbody></table><h2 id="配置思路"><a href="#配置思路" class="headerlink" title="配置思路"></a>配置思路</h2><p>采用如下的思路进行WLAN配置：</p><ol><li>配置AP、AC和周边网络设备之间实现网络互通。</li><li>使用配置向导，配置AC系统参数。</li><li>使用配置向导，配置AP在AC上线。</li><li>使用配置向导在AC上配置WLAN相关业务及内置Portal认证的相关参数。</li><li>在AP组下配置免认证规则。</li><li>用户完成业务验证。</li></ol><h2 id="配置注意事项"><a href="#配置注意事项" class="headerlink" title="配置注意事项"></a>配置注意事项</h2><ul><li><p>纯组播报文由于协议要求在无线空口没有ACK机制保障，且无线空口链路不稳定，为了纯组播报文能够稳定发送，通常会以低速报文形式发送。如果网络侧有大量异常组播流量涌入，则会造成无线空口拥堵。为了减小大量低速组播报文对无线网络造成的冲击，建议配置组播报文抑制功能。配置前请确认是否有组播业务，如果有，请谨慎配置限速值。</p><ul><li>业务数据转发方式采用直接转发时，建议在直连AP的交换机接口上配置组播报文抑制。</li><li>业务数据转发方式采用隧道转发时，建议在AC的流量模板下配置组播报文抑制。</li></ul><p>配置方法请参见：<a href="http://support.huawei.com/hedex/hdx.do?docid=EDOC1100025388&id=ZH-CN_TOPIC_0117428937&text=null&lang=zh" target="_blank" rel="noopener">如何配置组播报文抑制，减小大量低速组播报文对无线网络造成的冲击？</a></p></li><li><p>建议在与AP直连的设备接口上配置端口隔离，如果不配置端口隔离，尤其是业务数据转发方式采用直接转发时，可能会在VLAN内形成大量不必要的广播报文，导致网络阻塞，影响用户体验。</p></li><li><p>隧道转发模式下，管理VLAN和业务VLAN不能配置为同一VLAN，且AP和AC之间只能放通管理VLAN，不能放通业务VLAN。</p></li></ul><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="配置周边设备"><a href="#配置周边设备" class="headerlink" title="配置周边设备"></a>配置周边设备</h3><p>配置接入交换机SwitchA的GE0/0/1和GE0/0/2接口加入VLAN100，GE0/0/1的缺省VLAN为VLAN100。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] sysname SwitchA</span><br><span class="line">[SwitchA] vlan batch <span class="number">100</span></span><br><span class="line">[SwitchA] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">1</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port trunk pvid vlan <span class="number">100</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port-isolate enable</span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] quit</span><br><span class="line">[SwitchA] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">2</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span></span><br><span class="line">[SwitchA-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] quit</span><br></pre></td></tr></table></figure><p>配置汇聚交换机SwitchB的接口GE0/0/1和GE0/0/2加入VLAN100，接口GE0/0/2和GE0/0/3加入VLAN101。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] sysname SwitchB</span><br><span class="line">[SwitchB] vlan batch <span class="number">100</span> <span class="number">101</span></span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">1</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">1</span>] quit</span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">2</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">100</span> <span class="number">101</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">2</span>] quit</span><br><span class="line">[SwitchB] interface gigabitethernet <span class="number">0</span>/<span class="number">0</span>/<span class="number">3</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] port link-type trunk</span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">101</span></span><br><span class="line">[SwitchB-GigabitEthernet0/<span class="number">0</span>/<span class="number">3</span>] quit</span><br></pre></td></tr></table></figure><p>配置Router的接口GE1/0/0加入VLAN101，创建接口VLANIF101并配置IP地址为10.23.101.2/24。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt; system-view</span><br><span class="line">[Huawei] sysname Router</span><br><span class="line">[Router] vlan batch <span class="number">101</span></span><br><span class="line">[Router] interface gigabitethernet <span class="number">1</span>/<span class="number">0</span>/<span class="number">0</span></span><br><span class="line">[Router-GigabitEthernet1/<span class="number">0</span>/<span class="number">0</span>] port link-type trunk</span><br><span class="line">[Router-GigabitEthernet1/<span class="number">0</span>/<span class="number">0</span>] port trunk allow-<span class="keyword">pass</span> vlan <span class="number">101</span></span><br><span class="line">[Router-GigabitEthernet1/<span class="number">0</span>/<span class="number">0</span>] quit</span><br><span class="line">[Router] interface vlanif <span class="number">101</span></span><br><span class="line">[Router-Vlanif101] ip address <span class="number">10.23</span><span class="number">.101</span><span class="number">.2</span> <span class="number">24</span></span><br><span class="line">[Router-Vlanif101] quit</span><br></pre></td></tr></table></figure><h3 id="配置DHCP服务器为STA分配IP地址并指定STA网关"><a href="#配置DHCP服务器为STA分配IP地址并指定STA网关" class="headerlink" title="配置DHCP服务器为STA分配IP地址并指定STA网关"></a>配置DHCP服务器为STA分配IP地址并指定STA网关</h3><p>在SwitchB上配置VLANIF101接口为STA提供IP地址，并指定10.23.101.2作为STA的默认网关地址。</p><blockquote><p>DNS服务器地址请根据实际需要配置。常用配置方法如下：</p><ul><li>接口地址池场景，需要在VLANIF接口视图下执行命令<strong>dhcp server dns-list</strong> <em>ip-address</em> &amp;&lt;1-8&gt;。</li><li>全局地址池场景，需要在IP地址池视图下执行命令<strong>dns-list</strong> <em>ip-address</em> &amp;&lt;1-8&gt;。</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SwitchB] dhcp enable</span><br><span class="line">[SwitchB] interface vlanif <span class="number">101</span></span><br><span class="line">[SwitchB-Vlanif101] ip address <span class="number">10.23</span><span class="number">.101</span><span class="number">.1</span> <span class="number">24</span></span><br><span class="line">[SwitchB-Vlanif101] dhcp select interface</span><br><span class="line">[SwitchB-Vlanif101] dhcp server gateway-list <span class="number">10.23</span><span class="number">.101</span><span class="number">.2</span></span><br><span class="line">[SwitchB-Vlanif101] quit</span><br></pre></td></tr></table></figure><h3 id="配置AC系统参数"><a href="#配置AC系统参数" class="headerlink" title="配置AC系统参数"></a>配置AC系统参数</h3><h4 id="配置AC基本参数。"><a href="#配置AC基本参数。" class="headerlink" title="配置AC基本参数。"></a>配置AC基本参数。</h4><ul><li><p>单击“配置 &gt; 配置向导 &gt; AC”，进入“AC基本配置”页面。</p></li><li><p>“所在国家/地区”按实际情况选择，以“中国”为例。“系统时间”配置为“手动设置”。“日期和时间”配置为“使用PC当前时间”。</p><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112192052000.png" alt="点击放大"></p></li><li><p>单击页面下方的“下一步”，进入“端口配置”页面。</p></li></ul><h4 id="配置端口"><a href="#配置端口" class="headerlink" title="配置端口"></a>配置端口</h4><ul><li><p>选择接口“GigabitEthernet0/0/1”，展开“批量修改”，选择“接口类型”为“Trunk”，将“GigabitEthernet0/0/1”加入VLAN100（管理VLAN）和VLAN101（业务VLAN）。</p><blockquote><p>如果AC直接连接AP，需要在AC直连AP的接口上配置缺省VLAN为管理VLAN100。</p></blockquote><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112192311550.png" alt="点击放大" style="zoom:75%;" /></li><li><p>单击“应用”，在弹出的提示对话框中单击“确定”，完成配置。</p></li><li><p>单击“下一步”，进入“网络互联配置”页面。</p></li></ul><h4 id="配置网络互联。"><a href="#配置网络互联。" class="headerlink" title="配置网络互联。"></a>配置网络互联。</h4><ul><li><p>配置“DHCP状态”为“ON”。</p></li><li><p>单击“接口配置”下的“新建”，进入“新建接口配置”页面。</p></li><li><p>配置接口VLANIF100的IP地址为10.23.100.1/24。</p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112192405403.png" alt="img" style="zoom:75%;" /></li><li><p>单击“DHCPv4地址池列表”下的“新建”，采用“接口地址池”，选择接口VLANIF100。</p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112192422946.png" alt="点击放大" style="zoom:75%;" /></li><li><p>单击“确定”，完成VLANIF100接口地址池的配置。</p></li><li><p>单击“接口配置”下的“新建”，进入“新建接口配置”页面。选择“接口类型”为“Loopback”，“接口编号”为“1”，配置Loopback1接口的IP地址为10.23.101.3/24。</p></li><li><p>单击“确定”，完成Loopback1接口地址池的配置。</p></li><li><p>单击“静态路由表”下的“新建”，进入“新建静态路由表”页面。</p></li><li><p>配置缺省路由，指定下一跳为10.23.101.2。</p><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112192537902.png" alt="img"></p></li><li><p>单击“确定”，完成静态路由的配置。</p></li><li><p>单击“下一步”。</p></li><li><p>单击“下一步”，进入“AC源地址”页面。</p></li></ul><h4 id="配置AC源地址。"><a href="#配置AC源地址。" class="headerlink" title="配置AC源地址。"></a>配置AC源地址。</h4><ul><li><p>“AC源地址”选择“VLANIF”，单击选择按钮，选择“Vlanif100”。</p><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112192904858.png" alt="点击放大"></p></li><li><p>单击“下一步”，进入“配置确认”页面。</p><h4 id="配置确认。"><a href="#配置确认。" class="headerlink" title="配置确认。"></a>配置确认。</h4></li><li><p>确认配置，单击“完成并继续AP上线配置”。</p></li></ul><h3 id="配置AP上线"><a href="#配置AP上线" class="headerlink" title="配置AP上线"></a>配置AP上线</h3><h4 id="配置AP上线。"><a href="#配置AP上线。" class="headerlink" title="配置AP上线。"></a>配置AP上线。</h4><ul><li>单击“批量导入”，进入“批量导入”页面。单击<img src="https://download.huawei.com/mdl/image/download?uuid=02672a0109cf4136b51bb9ceb30c300d" alt="img">，下载批量添加AP模板文件到本地。</li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193031840.png" alt="img"></p><ul><li><p>在AP模板文件中填写AP信息，示例如下。如需添加多个AP，可以参照该示例在AP模板文件中填写多条AP信息。</p><ul><li>AP MAC地址：60de-4476-e360</li><li>AP SN：210235419610CB002287</li><li>AP名称：area_1</li><li>AP组：ap-group1</li></ul><blockquote><ul><li><p>当选择“AP认证方式”为“MAC认证”时，AP MAC地址为必填项，AP SN可不填。</p></li><li><p>当选择“AP认证方式”为“SN认证”时，AP SN为必填项，AP MAC地址可不填。</p><p>建议使用网络规划工具WLAN Planner将规划好的射频ID、AP信道、频宽、功率导出成.csv格式的表格，将表格中的这些信息填写到AP文件模板中，经度和纬度请根据实际情况配置。</p></li></ul></blockquote></li><li><p>单击“导入AP文件”后的<img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193253572.png" alt="img">，选择填写后的模板文件，单击“导入”。</p></li><li><p>导入完成后，页面显示导入结果信息，单击“确定”，完成添加。</p></li><li><p>单击“下一步”，进入“AP分组”页面。</p></li><li><p>AP模板文件中已添加AP组信息，直接单击“下一步”，进入“配置确认”页面。</p></li></ul><h4 id="配置确认。-1"><a href="#配置确认。-1" class="headerlink" title="配置确认。"></a>配置确认。</h4><ul><li>确认配置，单击“完成并继续无线业务配置”。</li></ul><h3 id="配置无线业务"><a href="#配置无线业务" class="headerlink" title="配置无线业务"></a>配置无线业务</h3><ul><li><p>单击“新建”，进入“基本信息”页面。</p></li><li><p>配置SSID名称、转发模式、业务VLAN ID等信息。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193326026.png" alt="img"></p><ul><li><p>单击“下一步”，进入“安全认证”页面。</p></li><li><p>选择“安全配置”为“Portal认证（企业网络适用）”，“Portal服务器”为“内置Portal服务器”。在“内置Portal服务器配置”页签下配置服务器IP地址和端口号，并选择“SSL策略”为“default_policy”，其中，IP地址为设备上与用户路由可达的三层接口的IP地址，该举例中配置的服务器IP地址为10.23.101.3。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193332252.png" alt="点击放大"></p><ul><li><p>点击“本地用户”右边的“管理”，进入“本地用户”配置页面。 </p></li><li><p>单击“新建”，进入“创建本地用户”页面。</p></li><li><p>选择“配置方式”为“手动添加”，配置本地用户的用户名和密码。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193338093.png" alt="img"></p><ul><li><p>单击“确定”。</p></li><li><p>在“本地用户”页面选择新建的本地用户名，单击“确定”。</p></li><li><p>单击“下一步”，进入“接入控制”页面。</p></li><li><p>选择“绑定AP组”为“ap-group1”。</p></li><li><p>单击“完成”。</p></li></ul><h3 id="配置用户免认证时可以访问的网络资源"><a href="#配置用户免认证时可以访问的网络资源" class="headerlink" title="配置用户免认证时可以访问的网络资源"></a>配置用户免认证时可以访问的网络资源</h3><ul><li><p>依次单击“配置 &gt; AP配置 &gt; 模板管理”，进入“模板管理”页面。</p></li><li><p>依次选择“无线业务 &gt; VAP模板 &gt; wlan-net &gt; 认证模板 &gt; 免认证规则模板”，进入“免认证规则模板”界面。</p></li><li><p>选择“免认证规则模板”为“default_free_rule”。</p></li><li><p>在“控制方式”处选择“免认证规则”。</p></li><li><p>单击“新建”，进入“新建免认证规则”页面，配置“规则编号”为“1”，免认证的目的IP地址为DNS服务器的IP地址。<br><img src="https://download.huawei.com/mdl/image/download?uuid=5d50e68c21d04f2586e2b2707e0c5d42" alt="img"></p></li><li><p>单击“确定”。</p></li><li><p>选中规则编号为1的免认证规则，单击“应用”，在弹出的提示页面中单击“确定”，完成配置。</p></li></ul><h3 id="检查配置结果"><a href="#检查配置结果" class="headerlink" title="检查配置结果"></a>检查配置结果</h3><ul><li><p>无线用户可以搜索到SSID为“wlan-net”的无线网络。</p></li><li><p>无线用户可以关联到无线网络中，获取到的IP地址为10.23.101.x/24，网关为10.23.101.2。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193444882.png" alt="img"></p><ul><li><p>无线用户浏览网页时，浏览器自动跳转到Portal认证页面，输入正确的用户名和密码后，认证成功，用户可以正常访问网页。</p></li><li><p>选择“监控 &gt; 用户 &gt; 上线用户统计”。在“用户列表”中可以看到所有上线的用户，使用筛选功能可以过滤显示结果。例如找到<strong>SSID</strong>列，单击“<img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193442529.png" alt="img">”，设置筛选条件，输入“wlan-net”，单击“确定”，可以看到连接在该SSID的用户。筛选功能支持多列组合筛选，可以精确查找上线用户。</p></li></ul><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%86%85%E7%BD%AEPortal%E8%AE%A4%E8%AF%81%E7%A4%BA%E4%BE%8B/download-20201112193447516.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      Huawei Wlan配置本地用户的内置Portal认证示例
    
    </summary>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/categories/Huawei/"/>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/tags/Huawei/"/>
    
      <category term="Wlan" scheme="http://liqiyue.github.io/tags/Wlan/"/>
    
      <category term="Portal" scheme="http://liqiyue.github.io/tags/Portal/"/>
    
  </entry>
  
  <entry>
    <title>Huawei Wlan FAT AP配置WPA2-PSK-AES安全策略示例</title>
    <link href="http://liqiyue.github.io/2020/11/08/Huawei%20Wlan%20FAT%20AP%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B.html"/>
    <id>http://liqiyue.github.io/2020/11/08/Huawei%20Wlan%20FAT%20AP%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B.html</id>
    <published>2020-11-07T21:01:41.000Z</published>
    <updated>2020-11-12T11:05:43.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>由于无线网络开放性的特点，若无线网络不采取适当的安全策略，业务数据就存在安全风险。用户对WLAN网络的安全性要求不高，不需要使用认证服务器，此时可以使用WEP或者WPA/WPA2（预共享密钥认证）的安全策略。考虑到用户的WLAN终端设备都为较新的款型，能够支持WPA/WPA2及其使用的TKIP和AES加密，所以不使用易被破解的WEP安全策略，采用WPA2的预共享密钥和AES加密，保证业务数据的安全。</p><h2 id="组网需求"><a href="#组网需求" class="headerlink" title="组网需求"></a>组网需求</h2><ul><li>DHCP部署方式：AP作为DHCP服务器为STA分配IP地址。</li></ul><p><strong>图2-4</strong> 配置WPA2-PSK-AES安全策略组网图<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/download-20201112182755910.png" alt="img"></p><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><table><thead><tr><th>项目</th><th>数据</th></tr></thead><tbody><tr><td>STA业务VLAN</td><td>VLAN101</td></tr><tr><td>DHCP服务器</td><td>AP作为STA的DHCP服务器</td></tr><tr><td>STA地址池</td><td>10.23.101.2～10.23.101.254/24</td></tr><tr><td>SSID模板</td><td>名称：wlan-netSSID名称：wlan-net</td></tr><tr><td>安全模板</td><td>名称：wlan-net安全策略：WPA-WPA2+PSK+AES密码：a1234567</td></tr><tr><td>VAP模板</td><td>名称：wlan-net业务VLAN：VLAN101引用模板：SSID模板wlan-net、安全模板wlan-net</td></tr></tbody></table><h2 id="配置思路"><a href="#配置思路" class="headerlink" title="配置思路"></a>配置思路</h2><p>采用如下的思路进行WLAN配置：</p><ol><li>使用WLAN配置向导，配置WLAN基本业务。在配置安全策略时，选择WPA-WPA2 PSK和AES。</li><li>配置射频调优功能。</li><li>STA关联WLAN网络，完成业务验证。</li></ol><h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><ol><li><p>配置WLAN基本业务</p><ul><li><p>单击“向导 &gt; 配置向导”，进入“Wi-Fi信号设置”页面。</p><ul><li>配置Wi-Fi信号。<ul><li>单击“新建”，进入“基本信息配置”页面。</li><li>配置SSID基本信息。<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/download-20201112182756005.png" alt="img"></li><li>单击“下一步”，进入“地址及速率配置”页面。</li><li>配置地址参数。(DNS服务器地址请根据实际需要配置。)<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/download-20201112182755951.png" alt="img"></li><li>单击“完成”</li></ul></li></ul></li><li><p>配置上网连接参数</p><ul><li>单击“下一步”，进入“上网连接设置”页面。</li><li>将接口以Tagged方式加入VLAN101.</li></ul></li></ul><blockquote><p>如果PC登录Web网管所连接的以太网接口和正在修改的以太网接口一致，请不要删掉接口上已有的VLAN配置，保证登录Web网管的PC和设备网络互通。如下图所示，接口上默认加入VLAN1和用户通信，用户可以通过默认的IP地址登录Web网管。若用户需要用默认的地址登录，不要删除原有的VLAN1.</p></blockquote><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/download-20201112182755901.png" alt="img"></p><ul><li>单击“完成”</li></ul></li><li><p>配置AP的信道和功率</p><ul><li><p>关闭AP射频的信道和功率自动调优功能，并手动配置AP的信道和功率</p><ul><li><p>射频的信道和功率自动调优功能默认开启，如果不关闭此功能则会导致手动配置不生效</p></li><li><p>依次单击“配置 &gt; WLAN业务 &gt; 无线业务配置 &gt; 射频0”，进入“射频0”页面</p></li><li><p>单击“射频管理”，进入“射频0配置(2.4G)”页面</p></li><li><p>在“射频0配置(2.4G)”页面关闭信道自动调优和功率自动调优功能，并设置信道为带宽20MHz信道6，发送功率为127dBm</p><p><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/download-20201112184242641.png" alt="img"></p></li><li><p>“射频1”上关闭信道自动调优和功率自动调优功能，并设置信道带宽20MHz信道149，发送功率127dBm的步骤与“射频0”类似，此处不再赘述</p></li><li><p>单击“应用”，在弹出的提示对话框中单击“确定”，完成配置</p></li></ul></li></ul></li><li><p>检查配置结果</p><ol><li>无线用户可以搜索到SSID为“wlan-net”的无线网络。</li><li>无线用户可以关联到无线网络中，获取到的IP地址为10.23.101.x/24，网关为10.23.101.1<br><img src="../../../../images/Huawei%20Wlan%E9%85%8D%E7%BD%AEWPA2-PSK-AES%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/download-20201112182755965.png" alt="img"></li><li>单击“监控 &gt; 终端管理 &gt; 终端用户管理”。在“终端用户列表”中可以看到STA正常上线，并且获得IP地址</li><li>用户输入密码后可以访问无线网络</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      Huawei Wlan FAT AP配置WPA2-PSK-AES安全策略示例
    
    </summary>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/categories/Huawei/"/>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/tags/Huawei/"/>
    
      <category term="Wlan" scheme="http://liqiyue.github.io/tags/Wlan/"/>
    
      <category term="Psk" scheme="http://liqiyue.github.io/tags/Psk/"/>
    
  </entry>
  
  <entry>
    <title>Juniper SRX防火墙简明配置手册</title>
    <link href="http://liqiyue.github.io/2020/10/27/Juniper%20SRX%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%80%E6%98%8E%E9%85%8D%E7%BD%AE%E6%89%8B%E5%86%8C.html"/>
    <id>http://liqiyue.github.io/2020/10/27/Juniper%20SRX%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%80%E6%98%8E%E9%85%8D%E7%BD%AE%E6%89%8B%E5%86%8C.html</id>
    <published>2020-10-27T03:07:56.000Z</published>
    <updated>2020-11-04T19:43:23.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Juniper-SRX防火墙简明配置手册"><a href="#Juniper-SRX防火墙简明配置手册" class="headerlink" title="Juniper SRX防火墙简明配置手册"></a>Juniper SRX防火墙简明配置手册</h1><blockquote><p>SRX系列防火墙是Juniper公司基于JUNOS操作系统的安全系列产品，JUNOS集成了路由、交换、安全性和一系列丰富的网络服务。目前Juniper公司的全系列路由器产品、交换机产品和SRX安全产品均采用统一源代码的JUNOS操作系统，JUNOS是全球首款将转发与控制功能相隔离，并采用模块化软件架构的网络操作系统。JUNOS作为电信级产品的精髓是Juniper真正成功的基石，它让企业级产品同样具有电信级的不间断运营特性，更好的安全性和管理特性，JUNOS软件创新的分布式架构为高性能、高可用、高可扩展的网络奠定了基础。基于NP架构的SRX系列产品产品同时提供性能优异的防火墙、NAT、IPSEC、IPS、SS*VPN和UTM等全系列安全功能，其安全功能主要来源于已被广泛证明的ScreenOS操作系统。</p><p>  本文旨在为熟悉Netscreen防火墙ScreenOS操作系统的工程师提供SRX防火墙参考配置，以便于大家能够快速部署和维护SRX防火墙，文档介绍JUNOS操作系统，并参考ScreenOS配置介绍SRX防火墙配置方法，最后对SRX防火墙常规操作与维护做简要说明。</p></blockquote><h1 id="JUNOS-操作系统介绍"><a href="#JUNOS-操作系统介绍" class="headerlink" title="JUNOS 操作系统介绍"></a>JUNOS 操作系统介绍</h1><h2 id="层次化配置结构"><a href="#层次化配置结构" class="headerlink" title="层次化配置结构"></a>层次化配置结构</h2><p>JUNOS采用基于FreeBSD内核的软件模块化操作系统，支持CLI命令行和WEBUI两种接口配置方式，本文主要对CLI命令行方式进行配置说明。JUNOS CLI使用层次化配置结构，分为操作（operational）和配置（configure）两类模式，在操作模式下可对当前配置、设备运行状态、路由及会话表等状态进行查看及设备运维操作，并通过执行config或edit命令进入配置模式，在配置模式下可对各相关模块进行配置并能够执行操作模式下的所有命令（run）。在配置模式下JUNOS采用分层分级模块下配置结构，如下图所示，edit命令进入下一级配置（类似unix cd命令）,exit命令退回上一级，top命令回到根级。</p><h2 id="JunOS配置管理"><a href="#JunOS配置管理" class="headerlink" title="JunOS配置管理"></a>JunOS配置管理</h2><p>​    JUNOS通过set语句进行配置，配置输入后并不会立即生效，而是作为候选配置（Candidate Config）等待管理员提交确认，管理员通过输入commit命令来提交配置，配置内容在通过SRX语法检查后才会生效，一旦commit通过后当前配置即成为有效配置（Active config）。另外，JUNOS允许执行commit命令时要求管理员对提交的配置进行两次确认，如执行commit confirmed 2命令要求管理员必须在输入此命令后2分钟内再次输入commit以确认提交，否则2分钟后配置将自动回退，这样可以避免远程配置变更时管理员失去对SRX的远程连接风险。</p><p>​    在执行commit命令前可通过配置模式下show命令查看当前候选配置（Candidate Config），在执行commit后配置模式下可通过run show config命令查看当前有效配置（Active config）。此外可通过执行show  |  compare比对候选配置和有效配置的差异。</p><p>​    SRX上由于配备大容量硬盘存储器，缺省按先后commit顺序自动保存50份有效配置，并可通过执行rolback和commit命令返回到以前配置（如rollback 0/commit可返回到前一commit配置）；也可以直接通过执行save <em>configname.conf*手动保存当前配置，并执行load override *configname.conf</em> / commit调用前期手动保存的配置。执行load factory-default / commit命令可恢复到出厂缺省配置。</p><p>​    SRX可对模块化配置进行功能关闭与激活，如执行deactivate security nat/comit命令可使NAT相关配置不生效，并可通过执行activate security nat/commit使NAT配置再次生效。</p><p>​    SRX通过set语句来配置防火墙，通过delete语句来删除配置，如delete security nat和edit security nat / delete一样，均可删除security防火墙层级下所有NAT相关配置，删除配置和ScreenOS不同，配置过程中需加以留意。</p><h2 id="SRX主要配置内容"><a href="#SRX主要配置内容" class="headerlink" title="SRX主要配置内容"></a>SRX主要配置内容</h2><p>部署SRX防火墙主要有以下几个方面需要进行配置：</p><p><strong>System</strong>：主要是系统级内容配置，如主机名、管理员账号口令及权限、时钟时区、Syslog、SNMP、系统级开放的远程管理服务（如telnet）等内容。</p><p><strong>Interface</strong>:接口相关配置内容。</p><p><strong>Security</strong>: 是SRX防火墙的主要配置内容，安全相关部分内容全部在Security层级下完成配置，如NAT、Zone、Policy、Address-book、Ipsec、Screen、Idp等，可简单理解为ScreenOS防火墙安全相关内容都迁移至此配置层次下，除了Application自定义服务。</p><p><strong>Application</strong>：自定义服务单独在此进行配置，配置内容与ScreenOS基本一致。</p><p><strong>routing-options</strong>： 配置静态路由或router-id等系统全局路由属性配置。</p><h1 id="SRX防火墙配置对照说明"><a href="#SRX防火墙配置对照说明" class="headerlink" title="SRX防火墙配置对照说明"></a>SRX防火墙配置对照说明</h1><h2 id="初始安装"><a href="#初始安装" class="headerlink" title="初始安装"></a>初始安装</h2><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Console口(通用超级终端缺省配置)连接SRX，root用户登陆，密码为空</span></span><br><span class="line">login: root</span><br><span class="line">Password:</span><br><span class="line">— JUNOS <span class="number">9.5</span>R1<span class="number">.8</span> built <span class="number">2009</span><span class="number">-07</span><span class="number">-16</span> <span class="number">15</span>:<span class="number">04</span>:<span class="number">30</span> UTC</span><br><span class="line">root% cli          <span class="comment">#进入操作模式</span></span><br><span class="line">root&gt;</span><br><span class="line">root&gt; configure</span><br><span class="line">Entering configuration mode  <span class="comment">#进入配置模式</span></span><br><span class="line">[edit]</span><br><span class="line">Root<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="设置root用户口令"><a href="#设置root用户口令" class="headerlink" title="设置root用户口令"></a>设置root用户口令</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置root用户口令</span></span><br><span class="line">root<span class="comment"># set system root-authentication plain-text-password</span></span><br><span class="line">root<span class="comment"># new password : root123   </span></span><br><span class="line">root<span class="comment"># retype new password: root123</span></span><br><span class="line"><span class="comment">#密码将以密文方式显示</span></span><br><span class="line">root<span class="comment"># show system root-authentication</span></span><br><span class="line">encrypted-password “$<span class="number">1</span>$xavDeUe6$fNM6olGU<span class="number">.8</span>.M7B62u05D6.”; <span class="comment"># SECRET-DATA</span></span><br></pre></td></tr></table></figure><p>注意：强烈建议不要使用其它加密选项来加密root和其它user口令(如encrypted-password加密方式)，此配置参数要求输入的口令应是经加密算法加密后的字符串，采用这种加密方式手工输入时存在密码无法通过验证风险。</p><p>注：root用户仅用于<strong>console</strong>连接本地管理SRX，不能通过远程登陆管理SRX，必须成功设置root口令后，才能执行commit提交后续配置命令。</p><h3 id="设置远程登陆管理用户"><a href="#设置远程登陆管理用户" class="headerlink" title="设置远程登陆管理用户"></a>设置远程登陆管理用户</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root<span class="comment"># set system login user *lab* class super-user authentication plain-text-password</span></span><br><span class="line">root<span class="comment"># new password : lab123</span></span><br><span class="line">root<span class="comment"># retype new password: lab123</span></span><br></pre></td></tr></table></figure><p>注：此lab用户拥有超级管理员权限，可用于console和远程管理访问，另也可自行灵活定义其它不同管理权限用户。</p><h3 id="远程管理SRX相关配置"><a href="#远程管理SRX相关配置" class="headerlink" title="远程管理SRX相关配置"></a>远程管理SRX相关配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">run set date YYYYMMDDhhmm.ss　　　　　　<span class="comment">#设置系统时钟</span></span><br><span class="line">set system time-zone Asia/Shanghai　　　<span class="comment">#设置时区为上海</span></span><br><span class="line">set system host-name SRX3400-A　　　　　<span class="comment">#设置主机名</span></span><br><span class="line">set system name-server <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>  　　 <span class="comment">#设置DNS服务器</span></span><br><span class="line">set system services ftp　　　　　　　　</span><br><span class="line">set system services telnet      </span><br><span class="line">set system services web-management http</span><br><span class="line"><span class="comment">#在系统级开启ftp/telnet/http远程接入管理服务</span></span><br><span class="line">set interfaces ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0.0</span> family inet address <span class="number">10.1</span><span class="number">.1</span><span class="number">.1</span>/<span class="number">24</span></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">set interfaces ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0</span> unit <span class="number">0</span> family inet address <span class="number">10.1</span><span class="number">.1</span><span class="number">.1</span>/<span class="number">24</span></span><br><span class="line">set interfaces ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">1</span> unit <span class="number">0</span> family inet address <span class="number">10.1</span><span class="number">.2</span><span class="number">.1</span>/<span class="number">24</span></span><br><span class="line">set routing-options static route <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> next-hop <span class="number">10.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#配置逻辑接口地址及缺省路由，SRX接口要求IP地址必须配置在逻辑接口下（类似ScreenOS的子接口），通常使用逻辑接口0即可</span></span><br><span class="line">set security zones security-zone untrust interfaces ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0.0</span></span><br><span class="line"><span class="comment">#将ge-0/0/0.0接口放到untrust zone去，类似ScreenOS</span></span><br><span class="line">set security zones security-zone untrust host-inbound-traffic system-services ping</span><br><span class="line">set security zones security-zone untrust host-inbound-traffic system-services http</span><br><span class="line">set security zones security-zone untrust host-inbound-traffic system-services telnet</span><br><span class="line"><span class="comment">#在untrust zone打开允许远程登陆管理服务，ScreenOS要求基于接口开放服务，SRX要求基于Zone开放，从SRX主动访问出去流量开启服务，类似ScreenOS</span></span><br></pre></td></tr></table></figure><h2 id="Policy"><a href="#Policy" class="headerlink" title="Policy"></a>Policy</h2><p>Policy配置方法与ScreenOS基本一致，仅在配置命令上有所区别，其中策略的允许/拒绝的动作（Action）需要额外配置一条then语句(将ScreenOS的一条策略分解成两条及以上配置语句)。Policy需要手动配置policy name，policy name可以是字符串，也可以是数字（与ScreenOS的policy ID类似,只不过需要手工指定）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">set security zones security-zone trust address-book address pc1 <span class="number">10.1</span><span class="number">.1</span><span class="number">.10</span>/<span class="number">32</span></span><br><span class="line">set security zones security-zone untrust address-book address server1 <span class="number">10.0</span><span class="number">.2</span><span class="number">.1</span>/<span class="number">32</span></span><br><span class="line"><span class="comment">#与ScreenOS一样，在trust和untrust zone下分别定义地址对象便于策略调用，地址对象的名称可以是地址/掩码形式</span></span><br><span class="line">set security zones security-zone trust address-book address-set addr-group1 address pc1</span><br><span class="line"><span class="comment">#在trust zone下定义名称为add-group1的地址组，并将pc1地址放到该地址组中</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">001</span> match source-address addr-group1 destination-address server1 application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">001</span> then permit</span><br><span class="line"><span class="comment">#定义从trust 到untrust方向permit策略，允许addr-group1组的源地址访问server1地址any服务</span></span><br></pre></td></tr></table></figure><h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>SRX NAT较ScreenOS在功能实现方面基本保持一致，但在功能配置上有较大区别，配置的主要差异在于ScreenOS的NAT与policy是绑定的，无论是MIP/VIP/DIP还是基于策略的NAT，在policy中均要体现出NAT内容（除了缺省基于untrust接口的Souec-NAT模式外），而SRX 的NAT则作为网络层面基础内容进行独立配置（独立定义地址映射的方向、映射关系及地址范围），Policy中不再包含NAT相关配置信息，这样的好处是易于理解、简化运维，当网络拓朴和NAT映射关系发生改变时，无需调整Policy配置内容。</p><p>SRX NAT和Policy执行先后顺序为：目的地址转换－目的地址路由查找－执行策略检查－源地址转换，结合这个执行顺序，在配置Policy时需注意：Policy中源地址应是转换前的源地址，而目的地址应该是转换后的目的地址，换句话说，Policy中的源和目的地址应该是源和目的两端的真实IP地址，这一点和ScreenOS存在区别，需要加以注意。</p><p>SRX中不再使用MIP/VIP/DIP这些概念，其中MIP被Static静态地址转换取代，两者在功能上完全一致；DIP被Source NAT取代；基于Policy的目的地址转换及VIP被 Destination NAT取代。ScreenOS中基于Untrust zone接口的源地址转换被保留下来，但在SRX中不再是缺省模式（SRX中Trust Zone接口没有NAT模式概念），需要手工配置。类似ScreenOS，Static属于双向NAT，其他类型均属于单向NAT，</p><p>此外，SRX还多了一个proxy-arp概念，如果定义的IP Pool（可用于源或目的地址转换）与接口IP在同一子网时，需配置SRX对这个Pool内的地址提供ARP代理功能，这样对端设备能够解析到IP Pool地址的MAC地址（使用接口MAC地址响应对方），以便于返回报文能够送达SRX。下面是配置举例及相关说明：</p><h3 id="Interface-based-NAT"><a href="#Interface-based-NAT" class="headerlink" title="Interface based NAT"></a>Interface based NAT</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#NAT：</span></span><br><span class="line">set security nat source rule-set <span class="number">1</span> <span class="keyword">from</span> zone trust</span><br><span class="line">set security nat source rule-set <span class="number">1</span> to zone untrust</span><br><span class="line">set security nat source rule-set <span class="number">1</span> rule rule1 match source-address <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> destination-address <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></span><br><span class="line">set security nat source rule-set <span class="number">1</span> rule rule1 then source-nat interface</span><br><span class="line"><span class="comment">#上述配置定义NAT源地址映射规则，从Trust Zone访问Untrust Zone的所有流量用Untrust Zone接口IP做源地址转换。</span></span><br><span class="line"><span class="comment">#Policy:</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match source-address <span class="number">10.1</span><span class="number">.2</span><span class="number">.2</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match destination-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> then permit</span><br><span class="line"><span class="comment">#上述配置定义Policy策略，允许Trust zone 10.1.2.2地址访问Untrust方向任何地址，根据前面的NAT配置，SRX在建立session时自动执行接口源地址转换。</span></span><br></pre></td></tr></table></figure><h3 id="Poo-based-Source-NAT"><a href="#Poo-based-Source-NAT" class="headerlink" title="Poo*based Source NAT"></a>Poo*based Source NAT</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#NAT：</span></span><br><span class="line">set security nat source poo*pool<span class="number">-1</span> address <span class="number">100.1</span><span class="number">.1</span><span class="number">.10</span> to <span class="number">100.1</span><span class="number">.1</span><span class="number">.20</span></span><br><span class="line">set security nat source rule-set <span class="number">1</span> <span class="keyword">from</span> zone trust</span><br><span class="line">set security nat source rule-set <span class="number">1</span> to zone untrust</span><br><span class="line">set security nat source rule-set <span class="number">1</span> rule rule1 match source-address <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> destination-address <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></span><br><span class="line">set security nat source rule-set <span class="number">1</span> rule rule1 then source-nat poo*pool<span class="number">-1</span></span><br><span class="line">set security nat proxy-arp interface ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">2</span> address <span class="number">100.1</span><span class="number">.1</span><span class="number">.10</span> to <span class="number">100.1</span><span class="number">.1</span><span class="number">.20</span></span><br><span class="line"><span class="comment">#上述配置表示从trust方向（any）到untrust方向(any)访问时提供源地址转换，源地址池为pool1(100.1.1.10 -100.1.1.20)，同时ge-0/0/2接口为此poo*IP提供ARP代理。需要注意的是：定义Pool时不需要与Zone及接口进行关联。配置proxy-arp目的是让返回包能够送达SRX，如果Pool与出接口IP不在同一子网，则对端设备需要配置指向100.1.1.1的Pool地址路由。</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Policy：</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match source-address <span class="number">10.1</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match destination-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> then permit</span><br><span class="line"><span class="comment">#上述配置定义Policy策略，允许Trust zone 10.1.2.2地址访问Untrust方向任何地址，根据前面的NAT配置，SRX在建立session时自动执行源地址转换。</span></span><br></pre></td></tr></table></figure><h3 id="Poo-base-destination-NAT"><a href="#Poo-base-destination-NAT" class="headerlink" title="Poo*base destination NAT"></a>Poo*base destination NAT</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#NAT：</span></span><br><span class="line">set security nat destination poo*<span class="number">111</span> address <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>/<span class="number">32</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> <span class="keyword">from</span> zone untrust</span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> match source-address <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> match destination-address <span class="number">100.100</span><span class="number">.100</span><span class="number">.100</span>/<span class="number">32</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> then destination-nat poo*<span class="number">111</span></span><br><span class="line"><span class="comment">#上述配置将外网any访问100.100.100.100地址映射到内网192.168.1.100地址，注意：定义的Dst Pool是内网真实IP地址，而不是映射前的公网地址。这点和Src-NAT Pool有所区别。</span></span><br><span class="line"><span class="comment">#Policy：</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match source-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match destination-address <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> then permit</span><br><span class="line"><span class="comment">#上述配置定义Policy策略，允许Untrust方向任何地址访问Trust方向192.168.1.100，根据前面的NAT配置，公网访问100.100.100.100时，SRX自动执行到192.168.1.100的目的地址转换。</span></span><br><span class="line"><span class="comment">#ScreenOS VIP功能对应的SRX Dst-nat配置：</span></span><br><span class="line">set security nat destination poo*<span class="number">222</span> address <span class="number">192.168</span><span class="number">.1</span><span class="number">.200</span>/<span class="number">32</span> port <span class="number">8000</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> <span class="keyword">from</span> zone untrust</span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> match source-address <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> match destination-address <span class="number">100.100</span><span class="number">.100</span><span class="number">.100</span>/<span class="number">32</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> match destination-port <span class="number">8000</span></span><br><span class="line">set security nat destination rule-set <span class="number">1</span> rule <span class="number">111</span> then destination-nat poo*<span class="number">222</span></span><br><span class="line"><span class="comment">#上述NAT配置定义：访问100.100.100.100地址8000端口映射至192.168.1.200地址8000端口，功能与ScreenOS VIP端口映射一致。</span></span><br></pre></td></tr></table></figure><h3 id="Poo-base-Static-NAT"><a href="#Poo-base-Static-NAT" class="headerlink" title="Poo*base Static NAT"></a>Poo*base Static NAT</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#NAT：</span></span><br><span class="line">set security nat static rule-set static-nat <span class="keyword">from</span> zone untrust</span><br><span class="line">set security nat static rule-set static-nat rule rule1 match destination-address <span class="number">100.100</span><span class="number">.100</span><span class="number">.100</span></span><br><span class="line">set security nat static rule-set static-nat rule rule1 then static-nat prefix <span class="number">192.168</span><span class="number">.1</span><span class="number">.200</span></span><br><span class="line"><span class="comment">#Policy:</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match source-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match destination-address <span class="number">192.168</span><span class="number">.1</span><span class="number">.200</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> match application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy <span class="number">1</span> then permit</span><br><span class="line"><span class="comment">#Static NAT概念与ScreenOS MIP一致，属于静态双向一对一NAT，上述配置表示访问100.100.100.100时转换为192.168.1.200，当192.168.1.200访问Internet时自动转换为100.100.100.100。</span></span><br></pre></td></tr></table></figure><h2 id="IPSEC-VPN"><a href="#IPSEC-VPN" class="headerlink" title="IPSEC VPN"></a>IPSEC VPN</h2><p>SRX IPSEC VPN支持Site-to-Site VPN 和基于NS-remote的拨号VPN，和ScreenOS一样，site-to-site VPN也支持路由模式和Policy模式，在配置方面也和ScreenOS基本一致。SRX中的加密/验证算法在命名上和ScreenOS存在一些区别，配置过程中建议选择ike和ipsec的proposal为 standard模式，standard中包含SRX支持的全部加密/验证算法，只要对端设备支持其中任何一种即可。SRX中通道接口使用st0接口，对应ScreenOS中的tunnel虚拟接口。</p><p>下面是图中左侧SRX基于路由方式Site-to-site VPN配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">set interfaces st0 unit <span class="number">0</span> family inet address <span class="number">10.2</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">24</span></span><br><span class="line">set security zones security-zone untrust interfaces st0<span class="number">.0</span></span><br><span class="line">set routing-options static route <span class="number">10.1</span><span class="number">.2</span><span class="number">.0</span>/<span class="number">24</span> next-hop st0<span class="number">.0</span></span><br><span class="line"><span class="comment">#定义st0 tunnel接口地址/Zone及通过VPN通道到对端网络路由</span></span><br><span class="line">set security ike policy ABC mode main</span><br><span class="line">set security ike policy ABC proposal-set standard</span><br><span class="line">set security ike policy ABC pre-shared-key ascii-text *juniper*</span><br><span class="line"><span class="comment">#定义IKE Phase1 policy参数，main mode，standard proposal及预共享密钥方式</span></span><br><span class="line">set security ike gateway gw1 ike-policy ABC</span><br><span class="line">set security ike gateway gw1 address <span class="number">10.0</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line">set security ike gateway gw1 external-interface ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">1.0</span></span><br><span class="line"><span class="comment">#定义IKE gaeway参数，预共享密钥认证，对端网关10.0.2.1，出接口ge-0/0/1（位于untrust zone）</span></span><br><span class="line">set security ipsec policy *AAA* proposal-set standard</span><br><span class="line">set security ipsec vpn vpn1 bind-interface st0<span class="number">.0</span></span><br><span class="line">set security ipsec vpn vpn1 ike gateway gw1</span><br><span class="line">set security ipsec vpn vpn1 ike ipsec-policy *AAA*</span><br><span class="line">set security ipsec vpn vpn1 establish-tunnels immediately</span><br><span class="line"><span class="comment">#定义ipsec Phase 2 VPN参数：standard proposal、与st0.0接口绑定，调用Phase 1 gw1 ike网关。</span></span><br><span class="line">set security policies <span class="keyword">from</span>-zone untrust to-zone trust policy vpn-policy match source-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone untrust to-zone trust policy vpn-policy match destination-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone untrust to-zone trust policy vpn-policy match application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone untrust to-zone trust policy vpn-policy then permit</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy vpn-policy match source-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy vpn-policy match destination-address any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy vpn-policy match application any</span><br><span class="line">set security policies <span class="keyword">from</span>-zone trust to-zone untrust policy vpn-policy then permit</span><br><span class="line"><span class="comment">#开启双向policy以允许VPN流量通过</span></span><br></pre></td></tr></table></figure><h2 id="Application-and-ALG"><a href="#Application-and-ALG" class="headerlink" title="Application and ALG"></a>Application and ALG</h2><p>SRX中自定义服务及ALG使用方法与ScreenOS保持一致，系统缺省开启FTP ALG，为TCP 21服务提供FTP应用ALG。自定义服务如果属于FTP类应用，需要将此自定义服务（非TCP 21端口）与FTP应用进行关联。下面举例定义一个FTP类服务ftp-test，使用目的端口为TCP 2100，服务超时时间为3600秒，并将此自定义服务与FTP应用关联（ALG），系统将识别此服务为FTP应用并开启FTP ALG来处理该应用流量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set applications application ftp-test protoco*tcp destination-port <span class="number">2100</span> inactivity-timeout <span class="number">3600</span></span><br><span class="line">set applications application ftp-test application-protoco*ftp</span><br></pre></td></tr></table></figure><h2 id="JSRP（HA配置）"><a href="#JSRP（HA配置）" class="headerlink" title="JSRP（HA配置）"></a>JSRP（HA配置）</h2><p>JSRP是Juniper SRX的私有HA协议，对应ScreenOS的NSRP双机集群协议，支持A/P和A/A模式，JSRP对ScreenOS NSRP协议和JUNOS Cluster集群技术进行了整合集成，熟悉NSRP协议有助于对JSRP协议的理解。JSRP和NSRP最大的区别在于JSRP是完全意义上的Cluster概念，两台设备完全当作一台设备来看待，两台设备的接口板卡顺序编号、运维变更将对两台设备同时进行操作，无需额外执行ScreenOS的配置和会话同步等操作，而ScreenOS NSRP可看作在同步配置和动态对象（session）基础上独立运行的两台单独设备。</p><p>JSRP要求两台设备在软件版本、硬件型号、板卡数量、插槽位置及端口使用方面严格一一对应。由于SRX 是转发与控制层面完全分裂架构，JSRP需要控制层面 (配置同步)和数据层面(Session同步)两个平面的互联，建议控制和数据层面互联链路使用光纤链路直连（部分平台强制要求光纤链路直连）。</p><p>JSRP接口命名方式采用多个机箱抽象成一个逻辑机箱之后再统一为各个槽位进行编号，如上所示的SRX5800，每个SRX5800机箱有12个业务槽位，节点0槽位号从0开始编号，节点1槽位号从12开始往后编。</p><h3 id="整个JSRP配置过程包括如下7个步骤："><a href="#整个JSRP配置过程包括如下7个步骤：" class="headerlink" title="整个JSRP配置过程包括如下7个步骤："></a>整个JSRP配置过程包括如下7个步骤：</h3><ul><li><p>配置Cluster id和Node id (对应ScreenOS NSRP 的cluster id并需手工指定设备使用节点id）</p></li><li><p>指定Contro*Port   （指定控制层面使用接口，用于配置同步及心跳）</p></li><li><p>指定Fabric Link Port      （指定数据层面使用接口，主要session等RTO同步）</p></li><li><p>配置Redundancy Group     （类似NSRP的VSD group，优先级与抢占等配置）</p></li><li><p>每个机箱的个性化配置     （单机无需同步的个性化配置，如主机名、带外管理口IP地址等）</p></li><li><p>配置Redundant Ethernet Interface （类似NSRP的Redundant冗余接口）</p></li><li><p>配置Interface Monitoring     （类似NSRP interface monitor，是RG数据层面切换依据）</p></li></ul><h3 id="SRX-JSRP配置样例："><a href="#SRX-JSRP配置样例：" class="headerlink" title="SRX JSRP配置样例："></a>SRX JSRP配置样例：</h3><h4 id="配置Cluster-id和Node-id"><a href="#配置Cluster-id和Node-id" class="headerlink" title="配置Cluster id和Node id"></a>配置Cluster id和Node id</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SRX-A&gt;set chassis cluster cluster-id <span class="number">1</span> node <span class="number">0</span> reboot（注意该命令需在operational模式下输入，Cluster ID取值范围为<span class="number">1</span> – <span class="number">15</span>，当Cluster ID = <span class="number">0</span>时将unsets the cluster）</span><br><span class="line">SRX-B&gt;set chassis cluster cluster-id <span class="number">1</span> node <span class="number">1</span> reboot</span><br></pre></td></tr></table></figure><h4 id="指定Contro-Port（如果主控板RE上有固定control-ports，则无需指定）："><a href="#指定Contro-Port（如果主控板RE上有固定control-ports，则无需指定）：" class="headerlink" title="指定Contro*Port（如果主控板RE上有固定control-ports，则无需指定）："></a>指定Contro*Port（如果主控板RE上有固定control-ports，则无需指定）：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set chassis cluster control-ports fpc <span class="number">11</span> port <span class="number">0</span></span><br><span class="line">set chassis cluster control-ports fpc <span class="number">23</span> port <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="指定Fabric-Link-Port"><a href="#指定Fabric-Link-Port" class="headerlink" title="指定Fabric Link Port"></a>指定Fabric Link Port</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set interfaces fab0 fabric-options member-interfaces ge<span class="number">-1</span>/<span class="number">0</span>/<span class="number">0</span></span><br><span class="line">set interfaces fab1 fabric-options member-interfaces ge<span class="number">-13</span>/<span class="number">0</span>/<span class="number">0</span></span><br><span class="line"><span class="comment">#Fabric Link中的Fab0固定用于node 0，Fab1固定用于node 1</span></span><br></pre></td></tr></table></figure><h4 id="配置Redundancy-Group"><a href="#配置Redundancy-Group" class="headerlink" title="配置Redundancy Group"></a>配置Redundancy Group</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#RG0固定用于主控板RE切换，RG1以后用于redundant interface切换，RE切换独立于接口切换</span></span><br><span class="line">set chassis cluster reth-count <span class="number">10</span> （指定整个Cluster中redundant ethernet interface最多数量）</span><br><span class="line">set chassis cluster redundancy-group <span class="number">0</span> node <span class="number">0</span> priority <span class="number">200</span> （高值优先，与NSRP相反）</span><br><span class="line">set chassis cluster redundancy-group <span class="number">0</span> node <span class="number">1</span> priority <span class="number">100</span></span><br><span class="line">set chassis cluster redundancy-group <span class="number">1</span> node <span class="number">0</span> priority <span class="number">200</span> （高值优先，与NSRP相反）</span><br><span class="line">set chassis cluster redundancy-group <span class="number">1</span> node <span class="number">1</span> priority <span class="number">100</span></span><br></pre></td></tr></table></figure><h4 id="每个机箱的个性化配置，便于对两台设备的区分与管理"><a href="#每个机箱的个性化配置，便于对两台设备的区分与管理" class="headerlink" title="每个机箱的个性化配置，便于对两台设备的区分与管理"></a>每个机箱的个性化配置，便于对两台设备的区分与管理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set groups node0 system host-name SRX-A</span><br><span class="line">set groups node0 interfaces fxp0 unit <span class="number">0</span> family inet address <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>/<span class="number">24</span> （带外网管口名称为fxp0，区别ScreenOS的MGT口）</span><br><span class="line">set groups node1 system host-name SRX-B</span><br><span class="line">set groups node1 interfaces fxp0 unit <span class="number">0</span> family inet address <span class="number">1.1</span><span class="number">.1</span><span class="number">.2</span>/<span class="number">24</span></span><br><span class="line">set apply-groups $&#123;node&#125;   （应用上述groups配置）</span><br></pre></td></tr></table></figure><h4 id="配置Redundant-Ethernet-Interface"><a href="#配置Redundant-Ethernet-Interface" class="headerlink" title="配置Redundant Ethernet Interface"></a>配置Redundant Ethernet Interface</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Redundant Ethernet Interface类似ScreenOS里的redundant interface，只不过Redundant Ethernet interface是分布在不同的机箱上 (这一特性又类似ScreenOS 的VSI接口)。</span></span><br><span class="line">Set interface ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0</span> gigether-options redundant-parent reth0 （node <span class="number">1</span>的ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0</span>接口）</span><br><span class="line">Set interface ge<span class="number">-13</span>/<span class="number">0</span>/<span class="number">0</span> gigether-options redundant-parent reth0 （node <span class="number">1</span>的ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0</span>接口）</span><br><span class="line">Set interface reth0 redundant-ether-options redundancy-group <span class="number">1</span>   （reth0属于RG1）</span><br><span class="line">Set interface reth0 unit <span class="number">0</span> family inet address <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><h4 id="配置Interface-Monitoring，被监控的接口Down掉后，RG1将自动进行主备切换（与ScreenOS类似），"><a href="#配置Interface-Monitoring，被监控的接口Down掉后，RG1将自动进行主备切换（与ScreenOS类似），" class="headerlink" title="配置Interface Monitoring，被监控的接口Down掉后，RG1将自动进行主备切换（与ScreenOS类似），"></a>配置Interface Monitoring，被监控的接口Down掉后，RG1将自动进行主备切换（与ScreenOS类似），</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Set cluster redundancy-group <span class="number">1</span> interface-monitor ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">0</span> weight <span class="number">255</span></span><br><span class="line">Set cluster redundancy-group <span class="number">1</span> interface-monitor ge<span class="number">-0</span>/<span class="number">0</span>/<span class="number">1</span> weight <span class="number">255</span></span><br><span class="line">Set cluster redundancy-group <span class="number">1</span> interface-monitor ge<span class="number">-13</span>/<span class="number">0</span>/<span class="number">0</span> weight <span class="number">255</span></span><br><span class="line">Set cluster redundancy-group <span class="number">1</span> interface-monitor ge<span class="number">-13</span>/<span class="number">0</span>/<span class="number">1</span> weight <span class="number">255</span></span><br></pre></td></tr></table></figure><h3 id="JSRP维护命令"><a href="#JSRP维护命令" class="headerlink" title="JSRP维护命令"></a>JSRP维护命令</h3><ul><li>手工切换JSRP Master，RG1 原backup将成为Master</li></ul><p>root@srx5800a&gt; request chassis cluster failover redundancy-group 1 node 1</p><ul><li>手工恢复JSRP状态，按照优先级重新确定主备关系（高值优先）</li></ul><p>root@srx5800b&gt; request chassis cluster failover reset redundancy-group 1</p><ul><li>查看cluster interface</li></ul><p>root@router&gt; show chassis cluster interfaces</p><ul><li>查看cluster 状态、节点状态、主备关系</li></ul><p>lab@srx5800a# run show chassis cluster status</p><ul><li>取消cluster配置</li></ul><p>srx5800a# set chassis cluster disable reboot</p><ul><li>升级JSRP软件版本<br>SRX目前暂不支持软件在线升级（ISSU），升级过程会中断业务。<ul><li>升级步骤如下：<ul><li>升级node 0，注意不要重启系统</li><li>升级node 1，注意不要重启系统.</li><li>同时重启两个系统</li><li>恢复处于disabled状态的node</li></ul></li></ul></li></ul><p>当contro*port或fabric link出现故障时，为避免出现双master (split-brain)现象，JSRP会把出现故障前状态为secdonary的node设为disabled状态，即除了RE，其余部件都不工作。想要恢复必须reboot该node。</p><h1 id="SRX防火墙常规操作与维护"><a href="#SRX防火墙常规操作与维护" class="headerlink" title="SRX防火墙常规操作与维护"></a>SRX防火墙常规操作与维护</h1><h2 id="设备关机"><a href="#设备关机" class="headerlink" title="设备关机"></a>设备关机</h2><p>SRX因为主控板上有大容量硬盘，为防止强行断电关机造成硬件故障，要求设备关机必须按照下面的步骤进行操作：</p><ol><li><p>管理终端连接SRX console口。</p></li><li><p>使用具有足够权限的用户名和密码登陆CLI命令行界面。</p></li><li><p>在提示符下输入下面的命令：</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user@host&gt; request system halt</span><br><span class="line">…</span><br><span class="line">The operating system has halted.</span><br><span class="line">Please press any key to reboot(除非需要重启设备，此时不要敲任何键，否则设备将进行重启)</span><br></pre></td></tr></table></figure><ol start="4"><li>等待console输出上面提示信息后，确认操作系统已停止运行，关闭机箱背后电源模块电源。</li></ol><h2 id="设备重启"><a href="#设备重启" class="headerlink" title="设备重启"></a>设备重启</h2><p>SRX重启必须按照下面的步骤进行操作：</p><ol><li><p>管理终端连接SRX console口。</p></li><li><p>使用具有足够权限的用户名和密码登陆CLI命令行界面。</p></li><li><p>在提示符下输入下面的命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@host&gt; request system reboot</span><br></pre></td></tr></table></figure></li><li><p>等待console设备的输出，操作系统已经重新启动。</p></li></ol><h2 id="操作系统升级"><a href="#操作系统升级" class="headerlink" title="操作系统升级"></a>操作系统升级</h2><p>SRX操作系统软件升级必须按照下面的步骤进行操作：</p><ol><li><p>管理终端连接SRX console口，便于升级过程中查看设备重启和软件加载状态。</p></li><li><p>SRX上开启FTP服务，并使用具有超级用户权限的非root用户通过FTP客户端将下载的升级软件介质上传到SRX上。</p></li><li><p>升级前，执行下面的命令备份旧的软件及设定：</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@host&gt; request system snapshot</span><br></pre></td></tr></table></figure><ol start="4"><li>加载新的SRX软件：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@host&gt;request system software add validate *filename.tgz reboot*</span><br></pre></td></tr></table></figure><ol start="5"><li>软件加载成功后， SRX将自动重启，重启完成后检查系统当前软件版本号：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@host&gt; show system software</span><br></pre></td></tr></table></figure><h2 id="密码恢复"><a href="#密码恢复" class="headerlink" title="密码恢复"></a>密码恢复</h2><p>SRX Root密码丢失，并且没有其他的超级用户权限，那么就需要执行密码恢复，该操作需要中断设备正常运行，但不会丢失配置信息，这点与ScreenOS存在区别。</p><p>要进行密码恢复，请按照下面操作进行：</p><ol><li><p>Console口连接SRX，然后重启SRX。</p></li><li><p>在启动过程中，console上出现下面的提示的时候，按空格键中断正常启动方式，然后再进入单用户状态，并输入：boot -s</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Loading /boot/defaults/loader.conf</span><br><span class="line">/kerne*data=… … syms=[… …]</span><br><span class="line">Hit [Enter] to boot immediately, <span class="keyword">or</span> space bar <span class="keyword">for</span> command prompt.</span><br><span class="line">loader&gt; </span><br><span class="line">loader&gt; boot -s</span><br></pre></td></tr></table></figure><ol start="3"><li>执行密码恢复：在以下提示文字后输入recovery，设备将自动进行重启</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter ful*pathname of shel*<span class="keyword">or</span> ‘recovery’ <span class="keyword">for</span> root password recovery <span class="keyword">or</span> RETURN <span class="keyword">for</span> /bin/sh: recovery</span><br></pre></td></tr></table></figure><ol start="4"><li>进入配置模式，删除root密码，并重现设置root密码：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@host&gt; configure</span><br><span class="line">Entering configuration mode</span><br><span class="line">user@host<span class="comment">#delete system root-authentication</span></span><br><span class="line">user@host<span class="comment">#set system root-authentication plain-text-password</span></span><br><span class="line">user@host<span class="comment">#New password:</span></span><br><span class="line">user@host<span class="comment">#Retype new password:</span></span><br><span class="line">user@host<span class="comment"># commit</span></span><br><span class="line">commit complete</span><br></pre></td></tr></table></figure><h2 id="常用监控维护命令"><a href="#常用监控维护命令" class="headerlink" title="常用监控维护命令"></a>常用监控维护命令</h2><p>下列操作命令在操作模式下使用，或在配置模式下run show…</p><ul><li><p>show system software 查看当前软件版本号</p></li><li><p>show system uptime    查看系统启动时间</p></li><li><p>show chassis haredware  查看硬件板卡及序列号</p></li><li><p>show chassis environment 查看硬件板卡当前状态</p></li><li><p>show chassis routing-engine 查看主控板（RE）资源使用及状态</p></li><li><p>show route        查看路由表</p></li><li><p>show arp        查看ARP表</p></li><li><p>show log messages    查看系统日志</p></li><li><p>show interface terse    查看所有接口运行状态</p></li><li><p>show interface ge-x/y/z detai*查看接口运行细节信息</p></li><li><p>monitor interface ge-x/y/z   动态统计接口数据包转发信息</p></li><li><p>monitor traffic interface ge-x/y/z 动态报文抓取（Tcpdump，类似ScreenOS snoop命令）</p></li><li><p>show security flow session summary 查看当前防火墙并发会话数</p></li><li><p>show security flow session     查看当前防火墙具体并发会话</p></li><li><p>clear security flow session al*  清除当前session</p></li><li><p>show security alg status     检查全局ALG开启情况</p></li><li><p>SRX对应ScreenOS debug flow basic跟踪报文处理路径的命令：  </p><ul><li>set security flow traceoptions flag basic-datapath 开启SRX基本报文处理Debug</li><li>set security flow traceoptions file <em>filename.log</em>  将输出信息记录到指定文件中</li><li>set security flow traceoptions file <em>filename.log</em> size <file-size> 设置该文件大小，缺省128k</li><li>set security flow traceoptions packet-filter filter1 destination-prefix 5.5.5.2 </li></ul></li><li><p>设置报文跟踪过滤器</p><ul><li>run file show <em>filename.log</em> 查看该Log输出信息</li></ul></li><li><p>SRX对应ScreenOS get tech命令，开Case时需要抓取的信息：request support information</p></li></ul>]]></content>
    
    <summary type="html">
    
      Juniper SRX防火墙简明配置手册
    
    </summary>
    
    
      <category term="Juniper" scheme="http://liqiyue.github.io/categories/Juniper/"/>
    
    
      <category term="Juniper" scheme="http://liqiyue.github.io/tags/Juniper/"/>
    
      <category term="SRX" scheme="http://liqiyue.github.io/tags/SRX/"/>
    
  </entry>
  
  <entry>
    <title>Cisco配置SSH登陆</title>
    <link href="http://liqiyue.github.io/2020/10/27/Cisco%E9%85%8D%E7%BD%AESSH%E7%99%BB%E9%99%86.html"/>
    <id>http://liqiyue.github.io/2020/10/27/Cisco%E9%85%8D%E7%BD%AESSH%E7%99%BB%E9%99%86.html</id>
    <published>2020-10-27T03:07:55.000Z</published>
    <updated>2020-11-07T23:08:35.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username cisco privilege <span class="number">15</span> password <span class="number">0</span> cisco</span><br></pre></td></tr></table></figure><h2 id="设置远程登陆"><a href="#设置远程登陆" class="headerlink" title="设置远程登陆"></a>设置远程登陆</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">line vty <span class="number">0</span> <span class="number">4</span></span><br><span class="line"> transport input telnet ssh               <span class="comment">#允许telnet、ssh远程登陆此设备</span></span><br><span class="line"> login local                              <span class="comment">#使用本地用户登陆</span></span><br></pre></td></tr></table></figure><h2 id="设置ssh"><a href="#设置ssh" class="headerlink" title="设置ssh"></a>设置ssh</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip ssh version <span class="number">2</span>                          <span class="comment">#ssh使用version 2（默认是1.99，即同时使用v1和v2）//可选</span></span><br><span class="line">hostname Cisco                            <span class="comment">#给交换机重命名</span></span><br><span class="line">ip domain name test.com                   <span class="comment">#域名</span></span><br><span class="line">crypto key generate rsa modulus <span class="number">2048</span> label r1sshkey  <span class="comment">#不配置主机名或域名的情况下，在生成密钥的时候可以使用label后面跟上密钥的名字</span></span><br><span class="line">crypto key zeroize rsa                    <span class="comment">#清除原有rsa密码 //可选</span></span><br><span class="line">crypto key generate rsa modulus <span class="number">2048</span>      <span class="comment">#配置生成密钥使用2048长度（新设备要求2048以上）</span></span><br><span class="line">ip ssh authentication-retries <span class="number">5</span>           <span class="comment">#重试次数改成5次（默认3次）//可选 </span></span><br><span class="line">ip ssh time-out <span class="number">30</span>                        <span class="comment">#配置超时时间为30秒（默认120秒）//可选</span></span><br><span class="line">ip ssh maxstartups <span class="number">5</span>                      <span class="comment">#设置同时最大登陆数量5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Cisco配置SSH登陆
    
    </summary>
    
    
      <category term="Cisco" scheme="http://liqiyue.github.io/categories/Cisco/"/>
    
    
      <category term="Cisco" scheme="http://liqiyue.github.io/tags/Cisco/"/>
    
      <category term="SSH" scheme="http://liqiyue.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Huawei AP状态解读</title>
    <link href="http://liqiyue.github.io/2020/10/27/Huawei%20AP%E7%8A%B6%E6%80%81%E8%A7%A3%E8%AF%BB.html"/>
    <id>http://liqiyue.github.io/2020/10/27/Huawei%20AP%E7%8A%B6%E6%80%81%E8%A7%A3%E8%AF%BB.html</id>
    <published>2020-10-27T03:07:54.000Z</published>
    <updated>2020-11-07T23:35:46.456Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>AP状态</th><th>描述</th><th>可能原因</th><th align="left">处理过程</th></tr></thead><tbody><tr><td>commit-failed（cmtfa）</td><td>AP上线后WLAN业务配置下发失败状态。</td><td>AP在AC上正常上线之后，在AC上对AP进行WLAN业务配置，如果AC和AP之间存在链路不通或者对端设备无回应等情况，AC下发WLAN业务配置给AP失败。</td><td align="left">请检查网络连接是否正常。</td></tr><tr><td>committing（cmt）</td><td>AP上线后WLAN业务配置正在下发状态。</td><td>AP在AC上正常上线之后，在AC上对AP进行WLAN业务配置，AC给AP下发这些配置的过程就是committing状态。</td><td align="left">正常过程状态，无需关注。</td></tr><tr><td>config（cfg）</td><td>AP上线过程中WLAN业务配置正在下发状态。</td><td>当AP和AC建链成功后，在AC下发业务配置给AP的阶段，AP的状态为config。</td><td align="left">正常过程状态，无需关注。</td></tr><tr><td>config-failed（cfgfa）</td><td>AP上线过程中的WLAN业务配置下发失败状态。</td><td>当AP和AC建链成功后，AC下发业务配置给AP，如果存在链路不通等原因，下发失败，AP的状态为config-failed。</td><td align="left">请检查网络连接是否正常</td></tr><tr><td>download（dload)</td><td>AP正在升级状态。</td><td>AP执行升级操作时，会切换到download状态。</td><td align="left">AP升级状态，请确认AP升级结束后，再次查看AP状态。</td></tr><tr><td>fault</td><td>AP上线失败状态。</td><td>常见的导致AP上线失败的原因包含以下几种。<br />1、AP在获取地址阶段未分配到IP地址或者配置了错误的地址。2、 AP和AC之间的网络不通。 AP认证不通过。3、 AC上接入的AP数超过了AC允许接入的最大AP数量。4、 AP设备故障。</td><td align="left"></td></tr><tr><td>idle</td><td>AP和AC建链前的初始状态。</td><td>如果AP从未和当前AC建立过CAPWAP链路，当首次建立链路前AP处于idle状态或离线添加AP时配置的MAC和SN与真实AP不一致。或者License资源不足导致AC无法管理AP。</td><td align="left">处理过程如下。<br />检查AP是否接入网络中，如果AP接入正常，则进行下一步检查。<br />检查离线添加的AP的MAC或SN是否和当前接入的真实的AP的MAC或SN一致，如果不一致执行以下操作修改：<br />1、  执行命令<strong>display ap</strong> <strong>all</strong>，获取到AP信息。2、 执行命令<strong>undo ap</strong> { <strong>ap-name</strong> <em>ap-name</em> | <strong>ap-id</strong> <em>ap-id</em> | <strong>ap-mac</strong> <em>ap-mac</em> | <strong>ap-group*</strong>group-name* | <strong>all</strong> }，删除AP。 3、执行命令<strong>ap-id</strong> <em>ap-id</em> [ [ <strong>type-id</strong> <em>type-id</em> | <strong>ap-type</strong> <em>ap-type</em> ] { <strong>ap-mac</strong> <em>ap-mac</em> | <strong>ap-sn</strong> <em>ap-sn</em> | <strong>ap-mac</strong> <em>ap-mac</em> <strong>ap-sn</strong> <em>ap-sn</em> } ]或<strong>ap-mac</strong> <em>ap-mac</em> [ <strong>type-id</strong> <em>type-id</em> | <strong>ap-type</strong> <em>ap-type</em> ] [ <strong>ap-id</strong> <em>ap-id</em> ] [ <strong>ap-sn</strong> <em>ap-sn</em>]，添加正确的AP信息。<br />如果仍未解决，请进行License扩容，需注意AC管理的远端单元数量不占用AC的License资源。</td></tr><tr><td>name-conflicted（namec）</td><td>AP名称重名冲突状态。</td><td>AP的名称和AC上上线过的AP名称冲突。</td><td align="left">执行命令<strong>ap-rename</strong> <strong>ap-id</strong> <em>ap-id</em> <strong>new-name*</strong>ap-new-name*更改AP名称。</td></tr><tr><td>normal（nor）</td><td>AP正常状态。</td><td>AP在AC上成功上线。</td><td align="left">正常过程状态，无需关注。</td></tr><tr><td>standby（stdby）</td><td>AP在备AC上的正常状态。</td><td>在双机热备份、双链路冷备份和N+1备份场景下，主备AC链路建立正常，AP正常上线之后在备AC上的状态是standby状态，在主AC上是normal状态。</td><td align="left">正常过程状态，无需关注。</td></tr><tr><td>ver-mismatch（vmiss）</td><td>AC和AP的版本不匹配状态。</td><td>AC和AP的版本不匹配。</td><td align="left">登录华为技术支持网站下载对应版本的版本说明书，查看版本配套说明，将AC或AP的版本升级到配套版本。</td></tr><tr><td>countryCode-mismatch（cmiss）</td><td>AC和AP的国家码不匹配状态。</td><td>AP当前版本不支持AC上配置的国家码。</td><td align="left">AP不支持该国家码，请升级AP或者修改AC的国家码配置。</td></tr><tr><td>type-mismatch（tmiss）</td><td>AP类型不匹配状态。</td><td>配置的AP类型和实际不匹配。</td><td align="left">请修改AP类型配置。</td></tr><tr><td>unauth</td><td>AP未认证状态。</td><td>AP未通过认证。</td><td align="left">可使用命令<strong>display ap unauthorized record</strong>查询未通过认证的AP。执行命令<strong>ap-confirm</strong>，确认认证未通过的AP，可允许其上线。</td></tr></tbody></table><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    <summary type="html">
    
      Huawei AP状态解读
    
    </summary>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/categories/Huawei/"/>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/tags/Huawei/"/>
    
      <category term="Ap" scheme="http://liqiyue.github.io/tags/Ap/"/>
    
  </entry>
  
  <entry>
    <title>Huawei Wlan二层架构配置psk认证举例</title>
    <link href="http://liqiyue.github.io/2020/10/27/Huawei%20Wlan%E4%BA%8C%E5%B1%82%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AEpsk%E8%AE%A4%E8%AF%81%E4%B8%BE%E4%BE%8B.html"/>
    <id>http://liqiyue.github.io/2020/10/27/Huawei%20Wlan%E4%BA%8C%E5%B1%82%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AEpsk%E8%AE%A4%E8%AF%81%E4%B8%BE%E4%BE%8B.html</id>
    <published>2020-10-27T03:07:54.000Z</published>
    <updated>2020-11-10T15:48:09.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="拓扑如下"><a href="#拓扑如下" class="headerlink" title="拓扑如下"></a>拓扑如下</h1><img src="../../../../images/Huawei%E4%BA%8C%E5%B1%82%E5%8D%95SSID%E9%85%8D%E7%BD%AE%E4%B8%BE%E4%BE%8B/image-20201107001500903.png" alt="image-20201107001500903" style="zoom:50%;" /><h1 id="配置Router"><a href="#配置Router" class="headerlink" title="配置Router"></a>配置Router</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dhcp enable           <span class="comment">##开启dhcp服务</span></span><br><span class="line">interface vlanif <span class="number">1</span></span><br><span class="line">ip add <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">dhcp select <span class="keyword">global</span>    <span class="comment">##配置全局dhcp</span></span><br><span class="line"><span class="comment">#配置地址池</span></span><br><span class="line">ip pool <span class="number">1</span></span><br><span class="line"> gateway-list <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> </span><br><span class="line"> network <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span> mask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> </span><br><span class="line"> dns-list <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line"> excluded-ip-address <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line"> option <span class="number">43</span> hex <span class="number">01060104</span>C0A80102   <span class="comment">##当Ac与Ap不在同一网段时使用</span></span><br></pre></td></tr></table></figure><h1 id="配置AC"><a href="#配置AC" class="headerlink" title="配置AC"></a>配置AC</h1><h2 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">interface vlanif <span class="number">1</span></span><br><span class="line">ip add <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h2 id="配置AP组"><a href="#配置AP组" class="headerlink" title="配置AP组"></a>配置AP组</h2><blockquote><p>每个AP都会加入并且只能加入到一个AP组中，AP组通常用于多个AP的通用配置，同时在单个AP下也可以配置AP的独有配置。</p></blockquote><blockquote><p>如果不手动配置AP加入到指定AP组中，则AP会自动加入到名为<strong>default</strong>的缺省AP组中。缺省的AP组不能被删除，但是可以进行修改。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wlan</span><br><span class="line">ap-group name wifi</span><br></pre></td></tr></table></figure><h2 id="添加AP设备"><a href="#添加AP设备" class="headerlink" title="添加AP设备"></a>添加AP设备</h2><p>添加AP有三种方式：离线导入AP、自动发现AP以及手工确认未认证列表中的AP。</p><ul><li>离线导入AP：预先配置AP的MAC地址和SN，当AP与AC连接时，如果AC发现AP和预先增加的AP的MAC地址和SN匹配，则AC开始与AP建立连接。</li><li>自动发现AP：当配置AP的认证模式为不认证或配置AP的认证模式为MAC或SN认证且将AP加入AP白名单中，则当AP与AC连接时，AP将被AC自动发现并正常上线。</li><li>手工确认未认证列表中的AP：当配置AP的认证模式为MAC或SN认证但AP没有离线导入且不在已设置的AP白名单中，则该AP会被记录到未授权的AP列表中。需要用户手工确认后，此AP才能正常上线。</li></ul><p>AC上可以管理的AP数量受以下因素限制：</p><ul><li>License资源项：普通AP+中心AP的总数不超过AC本地License资源项数目，远端单元数量不占用License资源。</li><li>AC可管理AP的最大数：AC可管理中心AP的最大数和可管理普通AP+远端单元的最大数是独立的。<ul><li>普通AP+远端单元的总数不超过AC可管理普通AP+远端单元的最大数。</li><li>中心AP的总数不超过AC可管理中心AP的最大数。</li></ul></li></ul><h3 id="离线导入AP"><a href="#离线导入AP" class="headerlink" title="离线导入AP"></a>离线导入AP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">wlan</span><br><span class="line">ap auth-mode &#123;mac-auth | sn-auth&#125;   <span class="comment">#配置AP认证模式为MAC认证或SN认证。</span></span><br><span class="line">ap-id 1 ?</span><br><span class="line">  ap-mac   AP MAC address</span><br><span class="line">  ap-sn    AP SN</span><br><span class="line">  ap-type  AP type</span><br><span class="line">  type-id  AP type ID</span><br><span class="line">  &lt;cr&gt;     Please press ENTER to execute command </span><br><span class="line">ap-name name      <span class="comment">#配置AP的名称。缺省情况下，未配置单个AP的名称。</span></span><br><span class="line">ap-group name     <span class="comment">#配置AP加入AP组。缺省情况下，未配置AP加入的组。</span></span><br></pre></td></tr></table></figure><h3 id="自动发现AP"><a href="#自动发现AP" class="headerlink" title="自动发现AP"></a>自动发现AP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">wlan</span><br><span class="line">ap auth-mode no-auth      <span class="comment">#配置AP认证方式为不认证</span></span><br></pre></td></tr></table></figure><h3 id="手工确认未认证列表中的AP"><a href="#手工确认未认证列表中的AP" class="headerlink" title="手工确认未认证列表中的AP"></a>手工确认未认证列表中的AP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">wlan</span><br><span class="line">ap auth-mode &#123;mac-auth | sn-auth&#125;   <span class="comment">#配置AP认证模式为MAC认证或SN认证。</span></span><br><span class="line">display ap unauthorized record  <span class="comment">#查看未认证通过的AP信息。</span></span><br><span class="line">ap-confirm &#123; all | mac ap-mac | sn ap-sn &#125;  <span class="comment">#确认未认证通过的AP，确认后，AP将进入“normal”状态。</span></span><br></pre></td></tr></table></figure><h2 id="查看所有在线AP"><a href="#查看所有在线AP" class="headerlink" title="查看所有在线AP"></a>查看所有在线AP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display ap all</span><br></pre></td></tr></table></figure><h2 id="创建安全模版（默认为default）"><a href="#创建安全模版（默认为default）" class="headerlink" title="创建安全模版（默认为default）"></a>创建安全模版（默认为default）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">security<span class="literal">-profile</span> name ssid_name  <span class="comment">#安全认证模板名称</span></span><br><span class="line">security wpa<span class="literal">-wpa2</span> psk pass<span class="literal">-phrase</span> a1234567 aes  <span class="comment">#便是加密类型wpa-wpa2 认证密码为a1234567</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h2 id="创建SSID模板："><a href="#创建SSID模板：" class="headerlink" title="创建SSID模板："></a>创建SSID模板：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssid<span class="literal">-profile</span> name ssid_name</span><br><span class="line">ssid ssid_name</span><br><span class="line">Info: This operation may take a few seconds, please wait.done.</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h2 id="创建VAP模板："><a href="#创建VAP模板：" class="headerlink" title="创建VAP模板："></a>创建VAP模板：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vap<span class="literal">-profile</span> name ssid_name</span><br><span class="line">forward<span class="literal">-mode</span> direct<span class="literal">-forward</span></span><br><span class="line">service<span class="literal">-vlan</span> vlan<span class="literal">-id</span> <span class="number">3</span>  <span class="comment">#配置VAP的业务VLAN</span></span><br><span class="line">security<span class="literal">-profile</span> ssid_name</span><br><span class="line">Info: This operation may take a few seconds, please wait.done.</span><br><span class="line">ssid<span class="literal">-profile</span> ssid_name</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h2 id="配置AP组引用VAP模板，并在射频0和1上引用VAP模板："><a href="#配置AP组引用VAP模板，并在射频0和1上引用VAP模板：" class="headerlink" title="配置AP组引用VAP模板，并在射频0和1上引用VAP模板："></a>配置AP组引用VAP模板，并在射频0和1上引用VAP模板：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ap<span class="literal">-group</span> name ap<span class="literal">-group1</span></span><br><span class="line">vap<span class="literal">-profile</span> ssid_name wlan <span class="number">1</span> radio <span class="number">0</span></span><br><span class="line">vap<span class="literal">-profile</span> ssid_name wlan <span class="number">1</span> radio <span class="number">1</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Huawei Wlan二层架构配置psk认证举例
    
    </summary>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/categories/Huawei/"/>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/tags/Huawei/"/>
    
      <category term="Wlan" scheme="http://liqiyue.github.io/tags/Wlan/"/>
    
      <category term="Ap" scheme="http://liqiyue.github.io/tags/Ap/"/>
    
      <category term="Psk" scheme="http://liqiyue.github.io/tags/Psk/"/>
    
  </entry>
  
  <entry>
    <title>MacOS下SSH命令Invalid key length错误的原因</title>
    <link href="http://liqiyue.github.io/2020/10/27/MacOS%E4%B8%8BSSH%E5%91%BD%E4%BB%A4Invalid%20key%20length%E9%94%99%E8%AF%AF%E7%9A%84%E5%8E%9F%E5%9B%A0.html"/>
    <id>http://liqiyue.github.io/2020/10/27/MacOS%E4%B8%8BSSH%E5%91%BD%E4%BB%A4Invalid%20key%20length%E9%94%99%E8%AF%AF%E7%9A%84%E5%8E%9F%E5%9B%A0.html</id>
    <published>2020-10-27T03:07:53.000Z</published>
    <updated>2020-11-07T21:04:18.888Z</updated>
    
    <content type="html"><![CDATA[<p>升级到Macos 10.13.2后，使用ssh以key方式登陆一个12年配置的服务器的时候，ssh命令报告了<code>ssh_dispatch_run_fatal:Invalid key length</code>的错误。</p><p>很是纳闷，服务器和本地的key都是配置好后就没动过的，key pair本身肯定没问题啊，怎么会报错了呢?</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Google了一下，发现是MacOS使用的OpenSSH版本升级到了7.6，小于1024bits的RSA keys已经不被支持了。</p><p>使用<code>ssh-keygen</code>查看了一下public key，发现是1023bit的。所以ssh时候报了<code>Invalid key length</code>的错误。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -lf carl.pub</span><br><span class="line"><span class="number">1023</span> <span class="number">82</span>:<span class="number">3</span>e:bc:<span class="number">4</span>c:e8:<span class="number">34</span>:<span class="number">0</span>e:f1:<span class="number">5</span>b:<span class="number">44</span>:e3:db:<span class="number">9</span>b:c2:<span class="number">11</span>:<span class="number">88</span> carl.pub (RSA)</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>重新生成了一个长度为2048bit的新ssh keypair，并将公钥添加到服务器端，就可以解决该问题。</p><p><strong>这个<code>Invalid key length</code>的错误，只是Macos的ssh客户端的行为，如果不换key，而使用一个允许小于1024bit的ssh客户端，原有的key仍然是可以登陆服务器的。</strong></p><h3 id="小测试"><a href="#小测试" class="headerlink" title="小测试"></a>小测试</h3><h4 id="试验1024bit-key-length"><a href="#试验1024bit-key-length" class="headerlink" title="试验1024bit key length"></a>试验1024bit key length</h4><p>使用<code>ssh-keygen -t rsa -b 1024 -C &quot;carl.shen@hello_aws&quot; -f carl_1024</code>生成key length为1024的keypair</p><p>使用私钥carl_1024登陆服务器，ssh客户端不会报告<code>Invalid key length</code> 的错误</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -i carl_1024 carl.shen<span class="variable">@hello_aws</span></span><br><span class="line">carl.shen<span class="variable">@hello_aws</span>: Permission denied (publickey).</span><br></pre></td></tr></table></figure><h4 id="试验2048bit-key-length"><a href="#试验2048bit-key-length" class="headerlink" title="试验2048bit key length"></a>试验2048bit key length</h4><p>使用<code>ssh-keygen -t rsa -b 2048 -C &quot;carl.shen@hello_aws&quot; -f carl_2048</code>生成key length为2048的keypair</p><p>使用私钥carl_2048登陆服务器，ssh客户端就不会报告<code>Invalid key length</code>的错误</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -i carl_2048 carl.shen<span class="variable">@hello_aws</span></span><br><span class="line">carl.shen<span class="variable">@hello_aws</span>: Permission denied (publickey).</span><br></pre></td></tr></table></figure><h4 id="试验4096bit-key-length"><a href="#试验4096bit-key-length" class="headerlink" title="试验4096bit key length"></a>试验4096bit key length</h4><p>使用<code>ssh-keygen -t rsa -b 4096 -C &quot;carl.shen@hello_aws&quot; -f carl_4096</code>生成key length为4096的keypair</p><p>使用私钥carl_4096登陆服务器，ssh客户端就不会报告<code>Invalid key length</code>的错误</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -i carl_4096 carl.shen<span class="variable">@hello_aws</span></span><br><span class="line">carl.shen<span class="variable">@hello_aws</span>: Permission denied (publickey).</span><br></pre></td></tr></table></figure><h4 id="尝试生成小于1024-bit的key失败"><a href="#尝试生成小于1024-bit的key失败" class="headerlink" title="尝试生成小于1024 bit的key失败"></a>尝试生成小于1024 bit的key失败</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b <span class="number">1023</span> -C <span class="string">"carl.shen@hello_aws"</span> -f carl_1023</span><br><span class="line">Invalid RSA <span class="built_in">key</span> <span class="built_in">length</span>: minimum <span class="built_in">is</span> <span class="number">1024</span> bits</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      MacOS下SSH命令Invalid key length错误的原因
    
    </summary>
    
    
      <category term="MacOS" scheme="http://liqiyue.github.io/categories/MacOS/"/>
    
    
      <category term="MacOS" scheme="http://liqiyue.github.io/tags/MacOS/"/>
    
      <category term="SSH" scheme="http://liqiyue.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Cisco交换机配置端口镜像</title>
    <link href="http://liqiyue.github.io/2020/10/27/Cisco%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%AB%AF%E5%8F%A3%E9%95%9C%E5%83%8F.html"/>
    <id>http://liqiyue.github.io/2020/10/27/Cisco%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%AB%AF%E5%8F%A3%E9%95%9C%E5%83%8F.html</id>
    <published>2020-10-27T03:07:52.000Z</published>
    <updated>2020-11-07T23:21:10.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SPAN-本地设备端口监控"><a href="#SPAN-本地设备端口监控" class="headerlink" title="SPAN:本地设备端口监控"></a>SPAN:本地设备端口监控</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">monitor session <span class="number">1</span> source interface ethernet <span class="number">0</span>/<span class="number">1</span> tx  <span class="comment">#tx意思是监控0/1接口发送的流量，rx为接收的流量，默认为both，即监控收发的流量</span></span><br><span class="line">monitor session <span class="number">1</span>  destination interface ethernet <span class="number">0</span>/<span class="number">2</span>  <span class="comment">#session 1里面接口0/1的流量复制一份发送到0/2，destination e0/2接口不能正常收发流量，只能接收镜像过来的流量</span></span><br></pre></td></tr></table></figure><h2 id="RSPAN：远端的设备端口口监控"><a href="#RSPAN：远端的设备端口口监控" class="headerlink" title="RSPAN：远端的设备端口口监控"></a>RSPAN：远端的设备端口口监控</h2><h3 id="在源端口交换机上配置："><a href="#在源端口交换机上配置：" class="headerlink" title="在源端口交换机上配置："></a>在源端口交换机上配置：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch1(config)<span class="comment">#vlan100  //vlan号必须独立于现网使用的vlan，不能和业务vlan相同，</span></span><br><span class="line">Switch1(config-vlan)<span class="comment">#name SPAN-VLAN  //为vlan 100名字配置为SPAN-VLAN</span></span><br><span class="line">Switch1(config-vlan)<span class="comment">#remote-span  //模式改成RSPAN，特殊vlan用来做端口镜像</span></span><br><span class="line">Switch1(config)<span class="comment">#monitor session 2 source interface Gig 0/1  //配置要抓取原端口的流量</span></span><br><span class="line">Switch1(config)<span class="comment">#monitor session 2 destination remote vlan 100  //目的端口配置为SPAN的vlan</span></span><br></pre></td></tr></table></figure><h3 id="在目的端口交换机上配置："><a href="#在目的端口交换机上配置：" class="headerlink" title="在目的端口交换机上配置："></a>在目的端口交换机上配置：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch2(config)<span class="comment">#vlan100  //vlan要和被抓取流量端口的交换机vlan要一致</span></span><br><span class="line">Switch2(config-vlan)<span class="comment">#name SPAN-VLAN  //为vlan 100名字配置为SPAN-VLAN</span></span><br><span class="line">Switch2(config-vlan)<span class="comment">#remote-span  //模式改成RSPAN，特殊vlan用来做端口镜像</span></span><br><span class="line">Switch2(config)<span class="comment">#monitor session 3 destination interface Gig 0/2  //配置要抓取原端口的流量，这里的session 号不需要和Switch1的一致</span></span><br><span class="line">Switch1(config)<span class="comment">#monitor session 3 source remote vlan 100  //目的端口配置为SPAN的vlan号</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Cisco交换机配置端口镜像
    
    </summary>
    
    
      <category term="Cisco" scheme="http://liqiyue.github.io/categories/Cisco/"/>
    
    
      <category term="Cisco" scheme="http://liqiyue.github.io/tags/Cisco/"/>
    
      <category term="Monitor" scheme="http://liqiyue.github.io/tags/Monitor/"/>
    
  </entry>
  
  <entry>
    <title>Huawei交换机配置发生变化时，自动备份到FTP</title>
    <link href="http://liqiyue.github.io/2020/10/27/Huawei%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E5%88%B0FTP.html"/>
    <id>http://liqiyue.github.io/2020/10/27/Huawei%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E5%88%B0FTP.html</id>
    <published>2020-10-27T03:07:51.000Z</published>
    <updated>2020-11-07T23:35:48.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>有时候，事情一多，你们是否也常常这样：ping通了，就走了。干完就撤了！交换机修改过的配置，常常忘记保存了。万一刚刚又遇到停电，交换机重启了，结果辛辛苦苦做的配置就丢失了，要恢复的话，就会给自己增加了不少的工作量和时间成本。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>电脑一台使用ftp程序作为ftp服务器。设置用户名密码和ftp目录</li><li>Huawei交换机一台</li><li>网络互通</li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置当交换机配置发生变化后，延迟1分钟后自动备份，</span></span><br><span class="line">set save-configuration delay <span class="number">1</span></span><br><span class="line"><span class="comment">#设置自动备份文件存到ftp服务器上</span></span><br><span class="line">set save-configuration backup-to-server server <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span> transport-type ftp user ftp-username password  ftp-password</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote><p>这是最重要的一步，保证FTP配置正确</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更改hostname后查看FTP文件夹是否更新</span></span><br><span class="line">syname test</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Huawei交换机配置发生变化时，自动备份到FTP
    
    </summary>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/categories/Huawei/"/>
    
    
      <category term="Huawei" scheme="http://liqiyue.github.io/tags/Huawei/"/>
    
      <category term="FTP" scheme="http://liqiyue.github.io/tags/FTP/"/>
    
  </entry>
  
</feed>
